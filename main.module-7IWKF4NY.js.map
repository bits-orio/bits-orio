{
  "version": 3,
  "sources": ["src/app/routes/main/main.component.ts", "src/app/routes/main/main.component.html", "src/app/routes/main/main.routes.ts", "src/app/routes/main/main.module.ts"],
  "sourcesContent": ["import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  inject,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { map } from 'rxjs';\r\n\r\nimport { SimplexResultType } from '~/models';\r\nimport { ContentService, ErrorService } from '~/services';\r\nimport { App, LabState, Objectives, Settings } from '~/store';\r\n\r\n@Component({\r\n  selector: 'lab-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MainComponent {\r\n  contentSvc = inject(ContentService);\r\n  ngZone = inject(NgZone);\r\n  ref = inject(ChangeDetectorRef);\r\n  router = inject(Router);\r\n  store = inject(Store<LabState>);\r\n  errorSvc = inject(ErrorService);\r\n  translateSvc = inject(TranslateService);\r\n\r\n  gameInfo = this.store.selectSignal(Settings.getGameInfo);\r\n  mod = this.store.selectSignal(Settings.getMod);\r\n  result = this.store.selectSignal(Objectives.getMatrixResult);\r\n\r\n  isResetting = false;\r\n\r\n  tabItems$ = this.contentSvc.lang$.pipe(\r\n    map((): MenuItem[] => [\r\n      {\r\n        label: this.translateSvc.instant('app.list'),\r\n        icon: 'fa-solid fa-list',\r\n        routerLink: 'list',\r\n        queryParamsHandling: 'preserve',\r\n      },\r\n      {\r\n        label: this.translateSvc.instant('app.flow'),\r\n        icon: 'fa-solid fa-diagram-project',\r\n        routerLink: 'flow',\r\n        queryParamsHandling: 'preserve',\r\n      },\r\n      {\r\n        label: this.translateSvc.instant('app.data'),\r\n        icon: 'fa-solid fa-database',\r\n        routerLink: 'data',\r\n        queryParamsHandling: 'preserve',\r\n      },\r\n    ]),\r\n  );\r\n\r\n  SimplexResultType = SimplexResultType;\r\n\r\n  reset(): void {\r\n    this.isResetting = true;\r\n    // Give button loading indicator a chance to start\r\n    setTimeout(() => {\r\n      this.ngZone.run(() => {\r\n        this.errorSvc.message.set(null);\r\n        this.router.navigateByUrl(this.gameInfo().route);\r\n        this.store.dispatch(new App.ResetAction());\r\n        this.isResetting = false;\r\n      });\r\n    }, 10);\r\n  }\r\n}\r\n", "<lab-header\r\n  [sticky]=\"contentSvc.scrollTop() > 16\"\r\n  [settingsXlHidden]=\"contentSvc.settingsXlHidden()\"\r\n></lab-header>\r\n\r\n@if (errorSvc.message(); as message) {\r\n  <p-dialog\r\n    [visible]=\"true\"\r\n    [modal]=\"true\"\r\n    [draggable]=\"false\"\r\n    [resizable]=\"false\"\r\n    [closable]=\"false\"\r\n    [closeOnEscape]=\"false\"\r\n  >\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"p-dialog-title p-error\">\r\n        <i class=\"fa-solid fa-circle-exclamation me-2\"></i>\r\n        <span>{{ 'app.error' | translate }}</span>\r\n      </div>\r\n    </ng-template>\r\n    <div class=\"p-error\">\r\n      <div>{{ 'app.errorDetail' | translate }}</div>\r\n      <div class=\"mt-4\">{{ message }}</div>\r\n      <div class=\"text-end mt-4\">\r\n        <button\r\n          pButton\r\n          pRipple\r\n          type=\"button\"\r\n          [label]=\"'reset' | translate\"\r\n          [loading]=\"isResetting\"\r\n          (click)=\"reset()\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  </p-dialog>\r\n} @else {\r\n  <lab-settings\r\n    [active]=\"contentSvc.settingsActive()\"\r\n    [hidden]=\"contentSvc.settingsXlHidden()\"\r\n  ></lab-settings>\r\n  <div\r\n    class=\"layout-mask\"\r\n    [class.active]=\"contentSvc.settingsActive()\"\r\n    (click)=\"contentSvc.toggleSettings()\"\r\n  ></div>\r\n  <div\r\n    class=\"layout-content\"\r\n    [class.settings-xl-hidden]=\"contentSvc.settingsXlHidden()\"\r\n  >\r\n    <main class=\"px-sm-4 py-4\">\r\n      @if (mod()) {\r\n        <lab-objectives></lab-objectives>\r\n        <p-card styleClass=\"mt-4\" [header]=\"'app.factory' | translate\">\r\n          @if (tabItems$ | async; as model) {\r\n            <p-tabMenu [model]=\"model\"></p-tabMenu>\r\n          }\r\n          <router-outlet></router-outlet>\r\n          <ng-template pTemplate=\"footer\">\r\n            <div class=\"d-flex align-items-center justify-content-between\">\r\n              @if (result().resultType === SimplexResultType.Solved) {\r\n                <div>\r\n                  {{\r\n                    'app.simplexSolved'\r\n                      | translate\r\n                        : {\r\n                            time: result().time,\r\n                            cost: result().cost?.toPrecision(2)\r\n                          }\r\n                  }}\r\n                </div>\r\n              } @else {\r\n                <div>\r\n                  {{\r\n                    'options.simplexResultType.' + result().resultType\r\n                      | translate\r\n                  }}\r\n                </div>\r\n              }\r\n              <span>{{ contentSvc.version }}</span>\r\n            </div>\r\n          </ng-template>\r\n        </p-card>\r\n      } @else {\r\n        <div class=\"d-flex flex-column align-items-center mt-5\">\r\n          <p-progressSpinner></p-progressSpinner>\r\n        </div>\r\n      }\r\n    </main>\r\n  </div>\r\n}\r\n", "import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MainComponent } from './main.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainComponent,\r\n    children: [\r\n      {\r\n        path: 'list',\r\n        loadComponent: () =>\r\n          import('./routes/list/list.component').then((c) => c.ListComponent),\r\n      },\r\n      {\r\n        path: 'flow',\r\n        loadComponent: () =>\r\n          import('./routes/flow/flow.component').then((c) => c.FlowComponent),\r\n      },\r\n      {\r\n        path: 'data',\r\n        loadChildren: () =>\r\n          import('./routes/data/data.module').then((m) => m.DataModule),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const MainRoutingModule = RouterModule.forChild(routes);\r\n", "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppSharedModule } from '~/app-shared.module';\r\nimport { MainSharedModule } from './main-shared.module';\r\nimport { MainComponent } from './main.component';\r\nimport { MainRoutingModule } from './main.routes';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AppSharedModule, MainSharedModule, MainRoutingModule],\r\n  declarations: [MainComponent],\r\n})\r\nexport class MainModule {}\r\n"],
  "mappings": "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",
  "names": []
}
