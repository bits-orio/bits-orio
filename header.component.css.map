{
  "version": 3,
  "sources": ["src/app/components/header/header.component.scss", "node_modules/bootstrap/scss/mixins/_breakpoints.scss"],
  "sourcesContent": ["@import 'bootstrap/scss/functions';\r\n@import 'bootstrap/scss/variables';\r\n@import 'bootstrap/scss/mixins/_breakpoints';\r\n\r\n:host {\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 320px;\r\n  z-index: 2;\r\n\r\n  transition: all 0.4s cubic-bezier(0.05, 0.74, 0.2, 0.99);\r\n  transition-property: width, left;\r\n\r\n  width: calc(100% - 320px);\r\n  height: 4rem;\r\n  padding: 0 1.5rem;\r\n\r\n  &.sticky {\r\n    background-color: var(--header-sticky-color);\r\n    backdrop-filter: blur(12px);\r\n  }\r\n\r\n  @include media-breakpoint-down(xl) {\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 6rem;\r\n  }\r\n\r\n  @include media-breakpoint-down(sm) {\r\n    padding: 0 0.25rem;\r\n  }\r\n\r\n  @include media-breakpoint-up(xl) {\r\n    &.settings-xl-hidden {\r\n      left: 0;\r\n\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n.header-menu {\r\n  display: flex;\r\n\r\n  margin: 0 0 0 auto;\r\n\r\n  > li {\r\n    position: relative;\r\n\r\n    + li {\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @include media-breakpoint-down(xl) {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n\r\n    > li {\r\n      width: 25%;\r\n\r\n      + li {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include media-breakpoint-down(sm) {\r\n    > li {\r\n      width: 33%;\r\n    }\r\n  }\r\n}\r\n\r\n:host ::ng-deep {\r\n  .p-tieredmenu {\r\n    left: unset !important;\r\n    right: 0px;\r\n  }\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n", "// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],
  "mappings": ";AAIA;AACE,WAAA;AACA,eAAA;AACA,YAAA;AACA,OAAA;AACA,QAAA;AACA,WAAA;AAEA,cAAA,IAAA,KAAA,aAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA;AACA,uBAAA,KAAA,EAAA;AAEA,SAAA,KAAA,KAAA,EAAA;AACA,UAAA;AACA,WAAA,EAAA;;AAEA,KAAA,CAAA;AACE,oBAAA,IAAA;AACA,2BAAA,KAAA;AAAA,mBAAA,KAAA;;ACuDA,OAAA,CAAA,SAAA,EAAA;ADxEJ;AAqBI,eAAA;AACA,qBAAA;AACA,UAAA;AAEA,WAAA;AACA,YAAA;;;AC8CA,OAAA,CAAA,SAAA,EAAA;ADxEJ;AA8BI,aAAA,EAAA;;;AC6BA,OAAA,CAAA,SAAA,EAAA;ADzBA,OAAA,CAAA;AACE,UAAA;AAEA,WAAA;;;AAKN,CAAA;AACE,WAAA;AAEA,UAAA,EAAA,EAAA,EAAA;;AAEA,CALF,YAKE,EAAA;AACE,YAAA;;AAEA,CARJ,YAQI,EAAA,GAAA,EAAA;AACE,eAAA;;ACqBF,OAAA,CAAA,SAAA,EAAA;AD9BJ,GAAA;AAcI,WAAA;AACA,qBAAA;;AAEA,GAjBJ,YAiBI,EAAA;AACE,WAAA;;AAEA,GApBN,YAoBM,EAAA,GAAA,EAAA;AACE,YAAA;;;ACSJ,OAAA,CAAA,SAAA,EAAA;ADHA,GA3BJ,YA2BI,EAAA;AACE,WAAA;;;AAMJ,MAAA,UAAA,CAAA;AACE,QAAA;AACA,SAAA;;AAIJ;AACE,mBAAA;;",
  "names": []
}
