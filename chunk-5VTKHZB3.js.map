{
  "version": 3,
  "sources": ["src/app/routes/main/pipes/step-id.pipe.ts", "src/app/routes/main/directives/dropdown-base.directive.ts", "src/app/routes/main/pipes/as-step.pipe.ts", "src/app/routes/main/pipes/inserter-speed.pipe.ts", "src/app/routes/main/pipes/left-pad.pipe.ts", "src/app/routes/main/pipes/rate.pipe.ts", "src/app/routes/main/pipes/machine-rate.pipe.ts", "src/app/routes/main/pipes/machine-show-rate.pipe.ts", "src/app/routes/main/pipes/machine-show.pipe.ts", "src/app/routes/main/pipes/options.pipe.ts", "src/app/routes/main/pipes/power.pipe.ts", "src/app/routes/main/pipes/step-href.pipe.ts", "src/app/routes/main/components/steps/steps.component.ts", "src/app/routes/main/components/steps/steps.component.html", "src/app/routes/main/directives/no-drag.directive.ts", "src/app/routes/main/components/objectives/objectives.component.ts", "src/app/routes/main/components/objectives/objectives.component.html", "src/app/routes/main/components/tech-picker/tech-picker.component.ts", "src/app/routes/main/components/tech-picker/tech-picker.component.html", "src/app/routes/main/pipes/filter-options.pipe.ts", "src/app/routes/main/components/settings/settings.component.ts", "src/app/routes/main/components/settings/settings.component.html", "src/app/routes/main/main-shared.module.ts"],
  "sourcesContent": ["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Step } from '~/models';\r\n\r\n@Pipe({ name: 'stepId' })\r\nexport class StepIdPipe implements PipeTransform {\r\n  static transform(value: Step): string {\r\n    return (\r\n      value.itemId ?? value.recipeObjectiveId ?? value.recipeId ?? value.id\r\n    );\r\n  }\r\n\r\n  transform(value: Step): string {\r\n    return StepIdPipe.transform(value);\r\n  }\r\n}\r\n", "import { Directive, effect, inject, input, OnInit } from '@angular/core';\r\nimport { Dropdown } from 'primeng/dropdown';\r\n\r\nimport { ContentService } from '~/services';\r\n\r\n@Directive({\r\n  selector: '[labDropdownBase]',\r\n})\r\nexport class DropdownBaseDirective implements OnInit {\r\n  contentSvc = inject(ContentService);\r\n  pDropdown = inject(Dropdown, { self: true });\r\n\r\n  labDropdownBase = input<'icon' | ''>();\r\n  setAutoFocusFilter = effect(() => {\r\n    const isMobile = this.contentSvc.isMobile();\r\n    this.pDropdown.autofocusFilter = !isMobile;\r\n  });\r\n  setStyleClass = effect(() => {\r\n    this.pDropdown.styleClass = this.labDropdownBase();\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.pDropdown.appendTo = 'body';\r\n    this.pDropdown.filter = true;\r\n    this.pDropdown.scrollHeight = '40vh';\r\n    this.pDropdown.panelStyleClass = 'tooltip';\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Step } from '~/models';\r\n\r\n/**\r\n * Does not do any actual checking, mainly used to restore typing inside\r\n * templates which cast to `any`\r\n */\r\n@Pipe({ name: 'asStep' })\r\nexport class AsStepPipe implements PipeTransform {\r\n  transform(value: unknown): Step {\r\n    return value as Step;\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { InserterData, InserterSpeed, ItemId, Rational } from '~/models';\r\nimport { Settings } from '~/store';\r\n\r\n@Pipe({ name: 'inserterSpeed' })\r\nexport class InserterSpeedPipe implements PipeTransform {\r\n  transform(\r\n    value: Rational | undefined,\r\n    settings: Settings.SettingsState,\r\n  ): InserterSpeed | null {\r\n    if (value != null) {\r\n      const inserter = InserterData[settings.inserterTarget][\r\n        settings.inserterCapacity\r\n      ]?.find((d) => d.value.gt(value) || d.id === ItemId.StackInserter);\r\n\r\n      if (inserter == null) {\r\n        // Should be impossible due to stack inserter fallback\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        id: inserter.id,\r\n        value: value.div(inserter.value),\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'leftPad' })\r\nexport class LeftPadPipe implements PipeTransform {\r\n  transform(value: string | undefined): string {\r\n    if (value == null) return '';\r\n\r\n    return ' '.repeat(4 - value.length) + value;\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Rational, rational } from '~/models';\r\n\r\n@Pipe({ name: 'rate' })\r\nexport class RatePipe implements PipeTransform {\r\n  static transform(value: Rational, precision: number | null): string {\r\n    if (precision == null) return value.toFraction();\r\n\r\n    if (precision === -2) {\r\n      const num = Math.round(value.mul(rational(100n)).toNumber());\r\n      return num.toString();\r\n    }\r\n\r\n    const num = value.toPrecision(precision);\r\n    let result = num.toString();\r\n    if (precision > 0) {\r\n      /**\r\n       * Check whether value is lower than minimum rounded-up value, and prepend\r\n       * < if so. E.G. if value is 0.001 and rounding to one digit, display <0.1\r\n       */\r\n      const compare = rational(1, Math.pow(10, precision));\r\n      if (value.gt(rational(0n)) && value.lt(compare)) result = `<${result}`;\r\n\r\n      const split = result.split('.');\r\n      if (split.length > 1) {\r\n        if (split[1].length < precision) {\r\n          const spaces = precision - split[1].length;\r\n          return result + '0'.repeat(spaces);\r\n        }\r\n      } else if (value.isInteger()) {\r\n        return result + ' '.repeat(precision + 1);\r\n      } else {\r\n        return result + '.' + '0'.repeat(precision);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  transform(value: Rational, precision: number | null): string {\r\n    return RatePipe.transform(value, precision);\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { ItemId, Rational, rational } from '~/models';\r\nimport { RatePipe } from './rate.pipe';\r\n\r\n@Pipe({ name: 'machineRate' })\r\nexport class MachineRatePipe implements PipeTransform {\r\n  transform(\r\n    value: Rational,\r\n    precision: number | null,\r\n    machineId: string,\r\n  ): string {\r\n    if (machineId === ItemId.Pumpjack) {\r\n      return `${RatePipe.transform(\r\n        value.mul(rational(100n)),\r\n        precision != null ? Math.max(precision - 2, 0) : precision,\r\n      )}%`;\r\n    } else {\r\n      return RatePipe.transform(value, precision);\r\n    }\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Game, ItemId } from '~/models';\r\n\r\n@Pipe({ name: 'machineShowRate' })\r\nexport class MachineShowRatePipe implements PipeTransform {\r\n  transform(machineId: string, game: Game): boolean {\r\n    return (\r\n      game !== Game.CaptainOfIndustry || machineId !== ItemId.MineControlTower\r\n    );\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Game, ItemId } from '~/models';\r\n\r\n@Pipe({ name: 'machineShow' })\r\nexport class MachineShowPipe implements PipeTransform {\r\n  transform(machineId: string | null | undefined, game: Game): boolean {\r\n    if (machineId == null) return false;\r\n\r\n    return (\r\n      game !== Game.DysonSphereProgram || machineId !== ItemId.MiningMachine\r\n    );\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { Entities, ItemId } from '~/models';\r\n\r\n@Pipe({ name: 'options' })\r\nexport class OptionsPipe implements PipeTransform {\r\n  transform(\r\n    value: string[] | null | undefined,\r\n    entities: Entities<{ name: string }>,\r\n    includeEmptyModule = false,\r\n  ): SelectItem[] {\r\n    if (value == null) {\r\n      return [];\r\n    }\r\n\r\n    const list = value.map(\r\n      (i): SelectItem => ({ label: entities[i].name, value: i }),\r\n    );\r\n\r\n    if (includeEmptyModule) {\r\n      list.unshift({ label: 'None', value: ItemId.Module });\r\n    }\r\n\r\n    return list;\r\n  }\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { PowerUnit, Rational, rational } from '~/models';\r\nimport { RatePipe } from './rate.pipe';\r\n\r\n@Pipe({ name: 'power' })\r\nexport class PowerPipe implements PipeTransform {\r\n  transform(\r\n    value: Rational,\r\n    precision: number | null,\r\n    unit?: PowerUnit,\r\n  ): string {\r\n    switch (unit) {\r\n      case PowerUnit.GW:\r\n        return `${RatePipe.transform(\r\n          value.div(rational(1000000n)),\r\n          precision,\r\n        )} GW`;\r\n      case PowerUnit.MW:\r\n        return `${RatePipe.transform(\r\n          value.div(rational(1000n)),\r\n          precision,\r\n        )} MW`;\r\n      default:\r\n        return `${RatePipe.transform(value, precision)} kW`;\r\n    }\r\n  }\r\n}\r\n", "import { inject, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { AdjustedDataset, Step } from '~/models';\r\nimport { RouterService, Zip } from '~/services';\r\n\r\n@Pipe({ name: 'stepHref' })\r\nexport class StepHrefPipe implements PipeTransform {\r\n  routerSvc = inject(RouterService);\r\n\r\n  transform(\r\n    value: Step,\r\n    zipPartial: Zip,\r\n    data: AdjustedDataset,\r\n  ): string | null {\r\n    let step = value;\r\n    if (step.recipeId) {\r\n      const recipe = data.adjustedRecipe[step.recipeId];\r\n      if (recipe.isTechnology && recipe.productivity && value.items) {\r\n        // Adjust items to account for productivity bonus\r\n        step = {\r\n          ...value,\r\n          ...{ items: value.items.div(recipe.productivity) },\r\n        };\r\n      }\r\n    }\r\n    return this.routerSvc.stepHref(step, zipPartial, data.hash);\r\n  }\r\n}\r\n", "import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  computed,\r\n  effect,\r\n  inject,\r\n  input,\r\n  OnInit,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { MenuItem, SortEvent } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { BehaviorSubject, combineLatest, filter, first, pairwise } from 'rxjs';\r\n\r\nimport { coalesce } from '~/helpers';\r\nimport {\r\n  AdjustedDataset,\r\n  EnergyType,\r\n  Entities,\r\n  Game,\r\n  IdValueDefaultPayload,\r\n  ItemId,\r\n  ObjectiveBase,\r\n  ObjectiveUnit,\r\n  rational,\r\n  Rational,\r\n  RecipeField,\r\n  Step,\r\n  StepDetail,\r\n  stepDetailIcon,\r\n  StepDetailTab,\r\n} from '~/models';\r\nimport { StepIdPipe } from '~/routes/main/pipes/step-id.pipe';\r\nimport {\r\n  ContentService,\r\n  ExportService,\r\n  RouterService,\r\n  TrackService,\r\n} from '~/services';\r\nimport {\r\n  Items,\r\n  LabState,\r\n  Machines,\r\n  Objectives,\r\n  Preferences,\r\n  Recipes,\r\n  Settings,\r\n} from '~/store';\r\nimport { RecipeUtility } from '~/utilities';\r\n\r\nexport type StepsMode = 'all' | 'focus';\r\n\r\n@Component({\r\n  selector: 'lab-steps',\r\n  templateUrl: './steps.component.html',\r\n  styleUrls: ['./steps.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StepsComponent implements OnInit, AfterViewInit {\r\n  document = inject(DOCUMENT);\r\n  route = inject(ActivatedRoute);\r\n  ref = inject(ChangeDetectorRef);\r\n  contentSvc = inject(ContentService);\r\n  trackSvc = inject(TrackService);\r\n  store = inject(Store<LabState>);\r\n  exportSvc = inject(ExportService);\r\n  routerSvc = inject(RouterService);\r\n\r\n  focus = input(false);\r\n  selectedId = input<string | null>();\r\n  steps = computed(() => {\r\n    const steps = [...this.store.selectSignal(Objectives.getSteps)()];\r\n    const focus = this.focus();\r\n    if (!focus) return steps;\r\n    const selectedId = this.selectedId();\r\n    return steps.filter((s) => s.id === selectedId);\r\n  });\r\n  activeItemsEffect = effect(() => {\r\n    const steps = this.steps();\r\n    const stepDetails = this.store.selectSignal(Objectives.getStepDetails)();\r\n    this.setActiveItems(steps, stepDetails);\r\n  });\r\n  toggleEffect = effect(() => {\r\n    const focus = this.focus();\r\n    const steps = this.steps();\r\n    if (focus) this.stepsTable().toggleRow(steps[0]);\r\n  });\r\n\r\n  machinesState = this.store.selectSignal(Machines.getMachinesState);\r\n  itemsState = this.store.selectSignal(Items.getItemsState);\r\n  itemsModified = this.store.selectSignal(Items.getItemsModified);\r\n  stepsModified = this.store.selectSignal(Objectives.getStepsModified);\r\n  totals = this.store.selectSignal(Objectives.getTotals);\r\n  stepDetails = this.store.selectSignal(Objectives.getStepDetails);\r\n  stepById = this.store.selectSignal(Objectives.getStepById);\r\n  stepByItemEntities = this.store.selectSignal(\r\n    Objectives.getStepByItemEntities,\r\n  );\r\n  stepTree = this.store.selectSignal(Objectives.getStepTree);\r\n  effectivePowerUnit = this.store.selectSignal(\r\n    Objectives.getEffectivePowerUnit,\r\n  );\r\n  recipesState = this.store.selectSignal(Recipes.getRecipesState);\r\n  recipesModified = this.store.selectSignal(Objectives.getRecipesModified);\r\n  data = this.store.selectSignal(Recipes.getAdjustedDataset);\r\n  columnsState = this.store.selectSignal(Settings.getColumnsState);\r\n  settings = this.store.selectSignal(Settings.getSettings);\r\n  dispRateInfo = this.store.selectSignal(Settings.getDisplayRateInfo);\r\n  options = this.store.selectSignal(Settings.getOptions);\r\n  beltSpeed = this.store.selectSignal(Settings.getBeltSpeed);\r\n  preferences = this.store.selectSignal(Preferences.preferencesState);\r\n\r\n  sortSteps$ = new BehaviorSubject<SortEvent | null>(null);\r\n\r\n  stepsTable = viewChild.required<Table>('stepsTable');\r\n\r\n  activeItem: Entities<MenuItem> = {};\r\n  fragmentId: string | null | undefined;\r\n  stepDetailIcon = stepDetailIcon;\r\n\r\n  ItemId = ItemId;\r\n  StepDetailTab = StepDetailTab;\r\n  Game = Game;\r\n  RecipeField = RecipeField;\r\n  EnergyType = EnergyType;\r\n  ObjectiveUnit = ObjectiveUnit;\r\n  rational = rational;\r\n\r\n  constructor() {\r\n    combineLatest([\r\n      this.sortSteps$.pipe(pairwise()),\r\n      this.store.select(Objectives.getSteps),\r\n    ])\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(([[prev, curr], steps]) => {\r\n        this.sortSteps(prev, curr, steps);\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.fragment\r\n      .pipe(\r\n        first(),\r\n        filter((f) => f != null),\r\n      )\r\n      .subscribe((id) => {\r\n        // Store the fragment to navigate to it after the component loads\r\n        this.fragmentId = id;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Now that component is loaded, try navigating to the fragment\r\n    try {\r\n      if (this.fragmentId) {\r\n        const [_, stepId, tabId] = this.fragmentId.split('_');\r\n        combineLatest([\r\n          this.store.select(Objectives.getSteps),\r\n          this.store.select(Objectives.getStepDetails),\r\n        ])\r\n          .pipe(first())\r\n          .subscribe(([steps, stepDetails]) => {\r\n            const step = steps.find((s) => s.id === stepId);\r\n            if (step) {\r\n              const tabs = stepDetails[step.id].tabs;\r\n              if (tabs.length) {\r\n                if (this.stepsTable) {\r\n                  this.stepsTable().toggleRow(step);\r\n                  setTimeout(() => {\r\n                    if (tabId) {\r\n                      const tab = this.document.querySelector(\r\n                        '#' + this.fragmentId,\r\n                      ) as HTMLElement | null;\r\n                      if (tab) {\r\n                        tab.click();\r\n                      }\r\n                    } else {\r\n                      this.document\r\n                        .querySelector('#' + this.fragmentId)\r\n                        ?.scrollIntoView();\r\n                    }\r\n                  }, 10);\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    } catch {\r\n      // ignore error\r\n    }\r\n  }\r\n\r\n  sortSteps(\r\n    prev: SortEvent | null,\r\n    curr: SortEvent | null,\r\n    steps: Step[],\r\n  ): void {\r\n    if (curr == null || curr.order == null || curr.field == null) return;\r\n    const order = curr.order;\r\n    const field = curr.field as\r\n      | 'items'\r\n      | 'belts'\r\n      | 'wagons'\r\n      | 'machines'\r\n      | 'power'\r\n      | 'pollution';\r\n\r\n    if (\r\n      prev != null &&\r\n      prev.field === field &&\r\n      prev.order !== order &&\r\n      order === -1 &&\r\n      this.stepsTable != null\r\n    ) {\r\n      /**\r\n       * User has sorted the same column three times in a row. Reset sort and\r\n       * reset table state, otherwise PrimeNG will not ever reset sort.\r\n       */\r\n      curr.data?.sort((a: Step, b: Step) => {\r\n        const diff = steps.indexOf(a) - steps.indexOf(b);\r\n        return diff;\r\n      });\r\n      this.stepsTable().sortOrder = 0;\r\n      this.stepsTable().sortField = '';\r\n      this.stepsTable().reset();\r\n      return this.sortSteps$.next(null);\r\n    }\r\n\r\n    // Sort by numeric field\r\n    curr.data?.sort((a: Step, b: Step) => {\r\n      const diff = (a[field] ?? rational(0n)).sub(b[field] ?? rational(0n));\r\n      return diff.toNumber() * order;\r\n    });\r\n  }\r\n\r\n  setActiveItems(steps: Step[], stepDetails: Entities<StepDetail>): void {\r\n    steps.forEach((s) => {\r\n      const id = StepIdPipe.transform(s);\r\n      const old = this.activeItem[id];\r\n      const detail = stepDetails[s.id];\r\n      if (detail == null) return;\r\n\r\n      if (old == null) {\r\n        this.activeItem[id] = detail.tabs[0];\r\n      } else {\r\n        const match = detail.tabs.find((t) => t.label === old.label);\r\n        if (match == null) {\r\n          this.activeItem[id] = detail.tabs[0];\r\n        } else {\r\n          this.activeItem[id] = match;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveItem(step: Step, item: MenuItem): void {\r\n    const id = StepIdPipe.transform(step);\r\n    this.activeItem[id] = item;\r\n  }\r\n\r\n  resetStep(step: Step): void {\r\n    if (step.itemId) {\r\n      this.resetItem(step.itemId);\r\n    }\r\n\r\n    if (step.recipeObjectiveId) {\r\n      this.resetRecipeObjective(step.recipeObjectiveId);\r\n    } else if (step.recipeId) {\r\n      this.resetRecipe(step.recipeId);\r\n    }\r\n  }\r\n\r\n  toggleRecipes(ids: string[], value: boolean, data: AdjustedDataset): void {\r\n    const payload = ids.map(\r\n      (id): IdValueDefaultPayload<boolean> => ({\r\n        id,\r\n        value,\r\n        def: coalesce(data.defaults?.excludedRecipeIds, []).includes(id),\r\n      }),\r\n    );\r\n    this.setRecipeExcludedBatch(payload);\r\n  }\r\n\r\n  toggleRecipe(\r\n    id: string,\r\n    recipesState: Recipes.RecipesState,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    const value = !recipesState[id].excluded;\r\n    const def = coalesce(data.defaults?.excludedRecipeIds, []).some(\r\n      (i) => i === id,\r\n    );\r\n    this.setRecipeExcluded(id, value, def);\r\n  }\r\n\r\n  changeRecipeField(\r\n    step: Step,\r\n    event: string | number | Rational,\r\n    machinesState: Machines.MachinesState,\r\n    data: AdjustedDataset,\r\n    field: RecipeField,\r\n    index?: number,\r\n    subindex?: number,\r\n  ): void {\r\n    if (step.recipeId == null) return;\r\n\r\n    const id = step.recipeObjectiveId ?? step.recipeId;\r\n    const isObjective = step.recipeObjectiveId != null;\r\n    const settings = step.recipeSettings;\r\n    if (settings?.machineId) {\r\n      const machineSettings = machinesState.entities[settings.machineId];\r\n      switch (field) {\r\n        case RecipeField.Machine: {\r\n          if (typeof event === 'string' && machinesState.ids != null) {\r\n            this.setMachine(\r\n              step.recipeObjectiveId ?? step.recipeId,\r\n              event,\r\n              RecipeUtility.bestMatch(\r\n                data.recipeEntities[step.recipeId].producers,\r\n                machinesState.ids,\r\n              ),\r\n              step.recipeObjectiveId != null,\r\n            );\r\n          }\r\n\r\n          break;\r\n        }\r\n        case RecipeField.Fuel: {\r\n          if (typeof event === 'string') {\r\n            this.setFuel(\r\n              step.recipeObjectiveId ?? step.recipeId,\r\n              event,\r\n              machineSettings.fuelId,\r\n              step.recipeObjectiveId != null,\r\n            );\r\n          }\r\n\r\n          break;\r\n        }\r\n        case RecipeField.Modules: {\r\n          if (\r\n            machineSettings.moduleRankIds != null &&\r\n            data != null &&\r\n            typeof event === 'string' &&\r\n            index != null &&\r\n            settings.moduleIds != null\r\n          ) {\r\n            const machine = data.machineEntities[settings.machineId];\r\n            const count = rational(settings.moduleIds.length);\r\n            const options = RecipeUtility.moduleOptions(\r\n              machine,\r\n              step.recipeId,\r\n              data,\r\n            );\r\n            const def = RecipeUtility.defaultModules(\r\n              options,\r\n              machineSettings.moduleRankIds,\r\n              count,\r\n            );\r\n            const modules = this.generateModules(\r\n              index,\r\n              event,\r\n              settings.moduleIds,\r\n            );\r\n            this.setModules(id, modules, def, isObjective);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.BeaconCount: {\r\n          if (event instanceof Rational && index != null) {\r\n            const def = machineSettings.beaconCount;\r\n            this.setBeaconCount(id, index, event, def, isObjective);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.Beacon: {\r\n          if (typeof event === 'string' && index != null) {\r\n            const def = machineSettings.beaconId;\r\n            this.setBeacon(id, index, event, def, isObjective);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.BeaconModules: {\r\n          if (\r\n            machineSettings.beaconModuleRankIds != null &&\r\n            typeof event === 'string' &&\r\n            index != null &&\r\n            subindex != null\r\n          ) {\r\n            const beaconSettings = settings.beacons?.[index];\r\n            if (\r\n              beaconSettings?.id != null &&\r\n              beaconSettings?.moduleIds != null\r\n            ) {\r\n              const beacon = data.beaconEntities[beaconSettings.id];\r\n              const count = rational(beaconSettings.moduleIds.length);\r\n              const options = RecipeUtility.moduleOptions(\r\n                beacon,\r\n                step.recipeId,\r\n                data,\r\n              );\r\n              const def = RecipeUtility.defaultModules(\r\n                options,\r\n                machineSettings.beaconModuleRankIds,\r\n                count,\r\n              );\r\n              const value = this.generateModules(\r\n                subindex,\r\n                event,\r\n                beaconSettings.moduleIds,\r\n              );\r\n              this.setBeaconModules(id, index, value, def, isObjective);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.BeaconTotal: {\r\n          if (event instanceof Rational && index != null) {\r\n            this.setBeaconTotal(id, index, event, isObjective);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.Overclock: {\r\n          if (typeof event === 'number') {\r\n            const def = machineSettings.overclock;\r\n            this.setOverclock(id, rational(event), def, isObjective);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateModules(index: number, value: string, original: string[]): string[] {\r\n    const modules = [...original]; // Copy\r\n    // Fill in index to the right\r\n    for (let i = index; i < modules.length; i++) {\r\n      modules[i] = value;\r\n    }\r\n    return modules;\r\n  }\r\n\r\n  changeStepChecked(step: Step, checked: boolean): void {\r\n    // Priority: 1) Item state, 2) Recipe objective state, 3) Recipe state\r\n    if (step.itemId != null) {\r\n      this.setItemChecked(step.itemId, checked);\r\n    } else if (step.recipeObjectiveId != null) {\r\n      this.setRecipeChecked(step.recipeObjectiveId, checked, true);\r\n    } else if (step.recipeId != null) {\r\n      this.setRecipeChecked(step.recipeId, checked);\r\n    }\r\n  }\r\n\r\n  /** Action Dispatch Methods */\r\n  setRows(value: number): void {\r\n    this.store.dispatch(new Preferences.SetRowsAction(value));\r\n  }\r\n\r\n  setItemExcluded(id: string, value: boolean): void {\r\n    this.store.dispatch(new Items.SetExcludedAction({ id, value }));\r\n  }\r\n\r\n  setItemChecked(id: string, value: boolean): void {\r\n    this.store.dispatch(new Items.SetCheckedAction({ id, value }));\r\n  }\r\n\r\n  setBelt(id: string, value: string, def: string): void {\r\n    this.store.dispatch(new Items.SetBeltAction({ id, value, def }));\r\n  }\r\n\r\n  setWagon(id: string, value: string, def: string): void {\r\n    this.store.dispatch(new Items.SetWagonAction({ id, value, def }));\r\n  }\r\n\r\n  setRecipeExcluded(id: string, value: boolean, def: boolean): void {\r\n    this.store.dispatch(new Recipes.SetExcludedAction({ id, value, def }));\r\n  }\r\n\r\n  setRecipeExcludedBatch(payload: IdValueDefaultPayload<boolean>[]): void {\r\n    this.store.dispatch(new Recipes.SetExcludedBatchAction(payload));\r\n  }\r\n\r\n  addObjective(value: ObjectiveBase): void {\r\n    this.store.dispatch(new Objectives.AddAction(value));\r\n  }\r\n\r\n  setMachine(id: string, value: string, def: string, objective = false): void {\r\n    const action = objective\r\n      ? Objectives.SetMachineAction\r\n      : Recipes.SetMachineAction;\r\n    this.store.dispatch(new action({ id, value, def }));\r\n  }\r\n\r\n  setFuel(\r\n    id: string,\r\n    value: string,\r\n    def: string | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective ? Objectives.SetFuelAction : Recipes.SetFuelAction;\r\n    this.store.dispatch(new action({ id, value, def }));\r\n  }\r\n\r\n  setModules(\r\n    id: string,\r\n    value: string[],\r\n    def: string[] | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetModulesAction\r\n      : Recipes.SetModulesAction;\r\n    this.store.dispatch(new action({ id, value, def }));\r\n  }\r\n\r\n  addBeacon(id: string, objective = false): void {\r\n    const action = objective\r\n      ? Objectives.AddBeaconAction\r\n      : Recipes.AddBeaconAction;\r\n    this.store.dispatch(new action(id));\r\n  }\r\n\r\n  removeBeacon(id: string, value: number, objective = false): void {\r\n    const action = objective\r\n      ? Objectives.RemoveBeaconAction\r\n      : Recipes.RemoveBeaconAction;\r\n    this.store.dispatch(new action({ id, value }));\r\n  }\r\n\r\n  setBeaconCount(\r\n    id: string,\r\n    index: number,\r\n    value: Rational,\r\n    def: Rational | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetBeaconCountAction\r\n      : Recipes.SetBeaconCountAction;\r\n    this.store.dispatch(new action({ id, index, value, def }));\r\n  }\r\n\r\n  setBeacon(\r\n    id: string,\r\n    index: number,\r\n    value: string,\r\n    def: string | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetBeaconAction\r\n      : Recipes.SetBeaconAction;\r\n    this.store.dispatch(new action({ id, index, value, def }));\r\n  }\r\n\r\n  setBeaconModules(\r\n    id: string,\r\n    index: number,\r\n    value: string[],\r\n    def: string[] | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetBeaconModulesAction\r\n      : Recipes.SetBeaconModulesAction;\r\n    this.store.dispatch(new action({ id, index, value, def }));\r\n  }\r\n\r\n  setBeaconTotal(\r\n    id: string,\r\n    index: number,\r\n    value: Rational,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetBeaconTotalAction\r\n      : Recipes.SetBeaconTotalAction;\r\n    this.store.dispatch(new action({ id, index, value }));\r\n  }\r\n\r\n  setOverclock(\r\n    id: string,\r\n    value: Rational,\r\n    def: Rational | undefined,\r\n    objective = false,\r\n  ): void {\r\n    const action = objective\r\n      ? Objectives.SetOverclockAction\r\n      : Recipes.SetOverclockAction;\r\n    this.store.dispatch(new action({ id, value, def }));\r\n  }\r\n\r\n  setRecipeChecked(id: string, value: boolean, objective = false): void {\r\n    const action = objective\r\n      ? Objectives.SetCheckedAction\r\n      : Recipes.SetCheckedAction;\r\n    this.store.dispatch(new action({ id, value }));\r\n  }\r\n\r\n  resetItem(value: string): void {\r\n    this.store.dispatch(new Items.ResetItemAction(value));\r\n  }\r\n\r\n  resetRecipe(value: string): void {\r\n    this.store.dispatch(new Recipes.ResetRecipeAction(value));\r\n  }\r\n\r\n  resetRecipeObjective(value: string): void {\r\n    this.store.dispatch(new Objectives.ResetObjectiveAction(value));\r\n  }\r\n\r\n  resetChecked(): void {\r\n    this.store.dispatch(new Items.ResetCheckedAction());\r\n  }\r\n\r\n  resetExcluded(): void {\r\n    this.store.dispatch(new Items.ResetExcludedAction());\r\n  }\r\n\r\n  resetBelts(): void {\r\n    this.store.dispatch(new Items.ResetBeltsAction());\r\n  }\r\n\r\n  resetWagons(): void {\r\n    this.store.dispatch(new Items.ResetWagonsAction());\r\n  }\r\n\r\n  resetMachines(): void {\r\n    this.store.dispatch(new Recipes.ResetMachinesAction());\r\n  }\r\n\r\n  resetBeacons(): void {\r\n    this.store.dispatch(new Recipes.ResetBeaconsAction());\r\n  }\r\n}\r\n", "<p-table\r\n  #stepsTable\r\n  dataKey=\"id\"\r\n  [rowTrackBy]=\"trackSvc.trackStep\"\r\n  styleClass=\"p-datatable-sm\"\r\n  [value]=\"steps()\"\r\n  [customSort]=\"true\"\r\n  [rowExpandMode]=\"focus() ? 'single' : 'multiple'\"\r\n  [defaultSortOrder]=\"-1\"\r\n  [paginator]=\"!focus() && !preferences().disablePaginator\"\r\n  [rows]=\"preferences().rows\"\r\n  [rowsPerPageOptions]=\"[25, 50, 100, 1000]\"\r\n  (rowsChange)=\"setRows($event)\"\r\n  [showCurrentPageReport]=\"true\"\r\n  (sortFunction)=\"sortSteps$.next($event)\"\r\n>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <!-- Table actions row -->\r\n      <td colspan=\"100\">\r\n        <div class=\"d-flex gap-2 py-2\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-outlined\"\r\n            icon=\"fa-solid fa-table-columns\"\r\n            [label]=\"'steps.columnSettings' | translate\"\r\n            (click)=\"contentSvc.showColumns$.next()\"\r\n          ></button>\r\n          @if (steps().length) {\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-file-arrow-down\"\r\n              [label]=\"'steps.downloadAsCsv' | translate\"\r\n              (click)=\"exportSvc.stepsToCsv(steps())\"\r\n            ></button>\r\n          }\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    <tr class=\"column-header-row\">\r\n      <!-- Row actions -->\r\n      <th></th>\r\n      <!-- Checkbox -->\r\n      @if (!focus() && columnsState().checkbox.show) {\r\n        <th>\r\n          <div class=\"d-flex align-items-center justify-content-center\">\r\n            <i class=\"fa-solid fa-square-check\"></i>\r\n            @if (itemsModified().checked || recipesModified().checked) {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"ms-2 p-button-text p-button-rounded\"\r\n                icon=\"fa-solid fa-rotate-left\"\r\n                [pTooltip]=\"'steps.checkedUndoTooltip' | translate\"\r\n                (click)=\"resetChecked()\"\r\n              ></button>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Tree -->\r\n      @if (!focus() && columnsState().tree.show) {\r\n        <th>{{ 'options.column.tree' | translate }}</th>\r\n      }\r\n      <!-- Items (Value / Icon)-->\r\n      <th colspan=\"2\" pSortableColumn=\"items\">\r\n        <div class=\"d-flex align-items-center\">\r\n          <span>{{ dispRateInfo().itemsLabel | translate }}</span>\r\n          @if (!focus()) {\r\n            <p-sortIcon field=\"items\"></p-sortIcon>\r\n          }\r\n          @if (itemsModified().excluded) {\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-text p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'steps.itemsUndoTooltip' | translate\"\r\n              (click)=\"resetExcluded(); $event.stopImmediatePropagation()\"\r\n            ></button>\r\n          }\r\n        </div>\r\n      </th>\r\n      <!-- Belts -->\r\n      @if (columnsState().belts.show) {\r\n        <th colspan=\"2\" pSortableColumn=\"belts\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'options.column.belts' | translate }}</span>\r\n            @if (!focus()) {\r\n              <p-sortIcon field=\"belts\"></p-sortIcon>\r\n            }\r\n            @if (itemsModified().belts) {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"ms-2 p-button-text p-button-rounded\"\r\n                icon=\"fa-solid fa-rotate-left\"\r\n                [pTooltip]=\"'steps.beltsUndoTooltip' | translate\"\r\n                (click)=\"resetBelts(); $event.stopImmediatePropagation()\"\r\n              ></button>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Wagons -->\r\n      @if (columnsState().wagons.show) {\r\n        <th colspan=\"2\" pSortableColumn=\"wagons\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ dispRateInfo().wagonsLabel | translate }}</span>\r\n            @if (!focus()) {\r\n              <p-sortIcon field=\"wagons\"></p-sortIcon>\r\n            }\r\n            @if (itemsModified().wagons) {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"ms-2 p-button-text p-button-rounded\"\r\n                icon=\"fa-solid fa-rotate-left\"\r\n                [pTooltip]=\"'steps.wagonsUndoTooltip' | translate\"\r\n                (click)=\"resetWagons(); $event.stopImmediatePropagation()\"\r\n              ></button>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Machines -->\r\n      <th colspan=\"2\" pSortableColumn=\"machines\">\r\n        <div class=\"d-flex align-items-center\">\r\n          <span>{{ 'options.column.machines' | translate }}</span>\r\n          @if (!focus()) {\r\n            <p-sortIcon field=\"machines\"></p-sortIcon>\r\n          }\r\n          @if (recipesModified().machines) {\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-text p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'steps.machinesUndoTooltip' | translate\"\r\n              (click)=\"resetMachines(); $event.stopImmediatePropagation()\"\r\n            ></button>\r\n          }\r\n        </div>\r\n      </th>\r\n      <!-- Beacons -->\r\n      @if (columnsState().beacons.show) {\r\n        <th colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'options.column.beacons' | translate }}</span>\r\n            @if (recipesModified().beacons) {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"ms-2 p-button-text p-button-rounded\"\r\n                icon=\"fa-solid fa-rotate-left\"\r\n                [pTooltip]=\"'steps.beaconsUndoTooltip' | translate\"\r\n                (click)=\"resetBeacons()\"\r\n              ></button>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Power -->\r\n      @if (columnsState().power.show) {\r\n        <th pSortableColumn=\"power\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'options.column.power' | translate }}</span>\r\n            @if (!focus()) {\r\n              <p-sortIcon field=\"power\"></p-sortIcon>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Pollution -->\r\n      @if (columnsState().pollution.show) {\r\n        <th pSortableColumn=\"pollution\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ dispRateInfo().pollutionLabel | translate }}</span>\r\n            @if (!focus()) {\r\n              <p-sortIcon field=\"pollution\"></p-sortIcon>\r\n            }\r\n          </div>\r\n        </th>\r\n      }\r\n      <!-- Link -->\r\n      @if (columnsState().link.show) {\r\n        <th></th>\r\n      }\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-_step let-expanded=\"expanded\">\r\n    @if (_step | asStep; as step) {\r\n      <tr>\r\n        <!-- Expand row -->\r\n        <td class=\"w-0 px-1 position-relative\">\r\n          <div [id]=\"'step_' + step.id\" class=\"fragment\"></div>\r\n          @for (item of stepDetails()[step.id].tabs; track item.id) {\r\n            <div\r\n              [id]=\"'step_' + step.id + '_' + item.label\"\r\n              class=\"fragment\"\r\n            ></div>\r\n          }\r\n          <div class=\"d-flex\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-text p-button-rounded transition-ease\"\r\n              [class.fa-rotate-90]=\"expanded\"\r\n              icon=\"fa-solid fa-angle-right\"\r\n              [pTooltip]=\"\r\n                (expanded ? 'steps.hideDetails' : 'steps.showDetails')\r\n                  | translate\r\n              \"\r\n              [pRowToggler]=\"step\"\r\n            ></button>\r\n          </div>\r\n        </td>\r\n        <!-- Checkbox -->\r\n        @if (!focus() && columnsState().checkbox.show) {\r\n          <td>\r\n            <div class=\"d-flex justify-content-center\">\r\n              <p-checkbox\r\n                [binary]=\"true\"\r\n                [ngModel]=\"step.checked\"\r\n                (onChange)=\"changeStepChecked(step, $event.checked)\"\r\n              ></p-checkbox>\r\n            </div>\r\n          </td>\r\n        }\r\n        <!-- Tree -->\r\n        @if (!focus() && columnsState().tree.show) {\r\n          <td class=\"overflow-hidden px-1 py-0\">\r\n            <div class=\"d-flex align-items-center links\">\r\n              @if (!stepsTable.sortField && stepTree()[step.id]?.length) {\r\n                @for (\r\n                  trail of stepTree()[step.id];\r\n                  track $index;\r\n                  let i = $index;\r\n                  let last = $last\r\n                ) {\r\n                  <div\r\n                    class=\"connect\"\r\n                    [class.trail]=\"trail\"\r\n                    [class.last]=\"last\"\r\n                  ></div>\r\n                }\r\n                <div class=\"indent\"></div>\r\n              }\r\n              <div class=\"icon\">\r\n                @if (step.itemId && step.recipeObjectiveId == null) {\r\n                  <button\r\n                    pButton\r\n                    pRipple\r\n                    type=\"button\"\r\n                    class=\"hover-action p-button-text\"\r\n                    [class.hover-active]=\"itemsState()[step.itemId].excluded\"\r\n                    [icon]=\"step.itemId | iconSmClass\"\r\n                    [pTooltip]=\"tooltip\"\r\n                    (click)=\"\r\n                      setItemExcluded(\r\n                        step.itemId,\r\n                        !itemsState()[step.itemId].excluded\r\n                      )\r\n                    \"\r\n                  >\r\n                    <i class=\"hover-icon fa-solid fa-eye-slash\"></i>\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip [id]=\"step.itemId\"></lab-tooltip>\r\n                    </ng-template>\r\n                  </button>\r\n                } @else {\r\n                  <i\r\n                    [class]=\"step.recipeId | iconSmClass: 'recipe'\"\r\n                    [pTooltip]=\"tooltip\"\r\n                  >\r\n                    @if (step.recipeObjectiveId != null) {\r\n                      <span>#{{ step.recipeObjectiveId }}</span>\r\n                    }\r\n                    <ng-template #tooltip>\r\n                      @if (step.recipeId) {\r\n                        <lab-tooltip\r\n                          [id]=\"step.recipeId\"\r\n                          type=\"recipe\"\r\n                        ></lab-tooltip>\r\n                      }\r\n                    </ng-template>\r\n                  </i>\r\n                }\r\n              </div>\r\n            </div>\r\n          </td>\r\n        }\r\n        <!-- Items (Value / Icon) -->\r\n        @if (step.itemId && step.items) {\r\n          <td class=\"w-0 text-end\">\r\n            @if (step.surplus && step.surplus.nonzero()) {\r\n              <span class=\"monospace\"\r\n                >(+{{ step.surplus | rate: columnsState().items.precision }})\r\n              </span>\r\n            }\r\n            <span class=\"monospace\">{{\r\n              step.items.sub(step.surplus ?? rational(0))\r\n                | rate: columnsState().items.precision\r\n            }}</span>\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <div class=\"d-flex align-items-center\">\r\n              <span class=\"find-text\">{{\r\n                data().itemEntities[step.itemId].name\r\n              }}</span>\r\n              @if (\r\n                !preferences().hideDuplicateIcons || !columnsState().tree.show\r\n              ) {\r\n                <button\r\n                  pButton\r\n                  pRipple\r\n                  type=\"button\"\r\n                  class=\"hover-action p-button-text\"\r\n                  [class.hover-active]=\"itemsState()[step.itemId].excluded\"\r\n                  [icon]=\"step.itemId | iconSmClass\"\r\n                  [pTooltip]=\"tooltip\"\r\n                  (click)=\"\r\n                    setItemExcluded(\r\n                      step.itemId,\r\n                      !itemsState()[step.itemId].excluded\r\n                    )\r\n                  \"\r\n                >\r\n                  <i class=\"hover-icon fa-solid fa-eye-slash\"></i>\r\n                  <ng-template #tooltip>\r\n                    <lab-tooltip [id]=\"step.itemId\"></lab-tooltip>\r\n                  </ng-template>\r\n                </button>\r\n              }\r\n            </div>\r\n          </td>\r\n        } @else {\r\n          <td colspan=\"2\"></td>\r\n        }\r\n        <!-- Belts -->\r\n        @if (columnsState().belts.show) {\r\n          @if (step.itemId && step.belts) {\r\n            @if (itemsState()[step.itemId].beltId; as beltId) {\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  step.belts | rate: columnsState().belts.precision\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <!-- Belt dropdown -->\r\n                  @if (\r\n                    data().beltIds.indexOf(beltId) !== -1 && settings().beltId;\r\n                    as defaultBeltId\r\n                  ) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      [pTooltip]=\"tooltip\"\r\n                      [ngModel]=\"beltId\"\r\n                      [options]=\"options().belts\"\r\n                      (onChange)=\"\r\n                        setBelt(step.itemId, $event.value, defaultBeltId)\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"belt\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip [id]=\"beltId\" type=\"belt\"></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  } @else {\r\n                    @if (\r\n                      data().pipeIds.indexOf(beltId) !== -1 &&\r\n                        settings().pipeId;\r\n                      as defaultPipeId\r\n                    ) {\r\n                      <!-- Pipes dropdown -->\r\n                      <p-dropdown\r\n                        labDropdownBase=\"icon\"\r\n                        [pTooltip]=\"tooltip\"\r\n                        [ngModel]=\"beltId\"\r\n                        [options]=\"options().pipes\"\r\n                        (onChange)=\"\r\n                          setBelt(step.itemId, $event.value, defaultPipeId)\r\n                        \"\r\n                      >\r\n                        <ng-template pTemplate=\"selectedItem\" let-item>\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"item\" let-item>\r\n                          <div\r\n                            class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                            [pTooltip]=\"tooltip\"\r\n                          >\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                            <div class=\"ms-3 text-truncate\">\r\n                              {{ item.label }}\r\n                            </div>\r\n                            <ng-template #tooltip>\r\n                              <lab-tooltip\r\n                                [id]=\"item.value\"\r\n                                type=\"pipe\"\r\n                              ></lab-tooltip>\r\n                            </ng-template>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip [id]=\"beltId\" type=\"pipe\"></lab-tooltip>\r\n                        </ng-template>\r\n                      </p-dropdown>\r\n                    } @else {\r\n                      <!-- Pipe icon only -->\r\n                      <i [class]=\"beltId | iconClass\" [pTooltip]=\"tooltip\">\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip [id]=\"beltId\" type=\"pipe\"></lab-tooltip>\r\n                        </ng-template>\r\n                      </i>\r\n                    }\r\n                  }\r\n                </div>\r\n              </td>\r\n            }\r\n          } @else {\r\n            <td colspan=\"2\"></td>\r\n          }\r\n        }\r\n        <!-- Wagons -->\r\n        @if (columnsState().wagons.show) {\r\n          @if (step.itemId && step.wagons) {\r\n            @if (itemsState()[step.itemId].wagonId; as wagonId) {\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  step.wagons | rate: columnsState().wagons.precision\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <!-- Cargo wagon dropdown -->\r\n                  @if (\r\n                    data().cargoWagonIds.indexOf(wagonId) !== -1 &&\r\n                      settings().cargoWagonId;\r\n                    as defaultCargoWagonId\r\n                  ) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      [pTooltip]=\"tooltip\"\r\n                      [ngModel]=\"wagonId\"\r\n                      [options]=\"options().cargoWagons\"\r\n                      (onChange)=\"\r\n                        setWagon(step.itemId, $event.value, defaultCargoWagonId)\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"cargo-wagon\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"wagonId\"\r\n                          type=\"cargo-wagon\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  } @else {\r\n                    <!-- Fluid wagon dropdown -->\r\n                    @if (\r\n                      data().fluidWagonIds.indexOf(wagonId) !== -1 &&\r\n                        settings().fluidWagonId;\r\n                      as defaultFluidWagonId\r\n                    ) {\r\n                      <p-dropdown\r\n                        labDropdownBase=\"icon\"\r\n                        [pTooltip]=\"tooltip\"\r\n                        [ngModel]=\"wagonId\"\r\n                        [options]=\"options().fluidWagons\"\r\n                        (onChange)=\"\r\n                          setWagon(\r\n                            step.itemId,\r\n                            $event.value,\r\n                            defaultFluidWagonId\r\n                          )\r\n                        \"\r\n                      >\r\n                        <ng-template pTemplate=\"selectedItem\" let-item>\r\n                          @if (item) {\r\n                            <div class=\"d-flex\">\r\n                              <i [class]=\"item.value | iconSmClass\"></i>\r\n                            </div>\r\n                          }\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"item\" let-item>\r\n                          <div\r\n                            class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                            [pTooltip]=\"tooltip\"\r\n                          >\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                            <div class=\"ms-3 text-truncate\">\r\n                              {{ item.label }}\r\n                            </div>\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"fluid-wagon\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </ng-template>\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip\r\n                            [id]=\"wagonId\"\r\n                            type=\"fluid-wagon\"\r\n                          ></lab-tooltip>\r\n                        </ng-template>\r\n                      </p-dropdown>\r\n                    }\r\n                  }\r\n                </div>\r\n              </td>\r\n            }\r\n          } @else {\r\n            <td colspan=\"2\"></td>\r\n          }\r\n        }\r\n        <!-- Machines -->\r\n        @if (step.recipeSettings?.machineId; as machineId) {\r\n          <td class=\"w-0 text-end\">\r\n            @if (\r\n              step.machines &&\r\n              step.machines.nonzero() &&\r\n              (machineId | machineShowRate: data().game)\r\n            ) {\r\n              <span class=\"monospace\">{{\r\n                step.machines\r\n                  | machineRate: columnsState().machines.precision : machineId\r\n              }}</span>\r\n            }\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            @if (step.recipeId && step.recipe && step.recipeSettings) {\r\n              <div class=\"d-flex align-items-center\">\r\n                <span class=\"find-text\">{{ step.recipe.name }}</span>\r\n                @if (\r\n                  !preferences().hideDuplicateIcons ||\r\n                  (step.itemId != null && step.itemId !== step.recipeId)\r\n                ) {\r\n                  <button\r\n                    pButton\r\n                    pRipple\r\n                    type=\"button\"\r\n                    class=\"hover-action p-button-text\"\r\n                    [pTooltip]=\"tooltip\"\r\n                    (click)=\"\r\n                      addObjective({\r\n                        targetId: step.recipeId,\r\n                        unit: ObjectiveUnit.Machines\r\n                      })\r\n                    \"\r\n                  >\r\n                    <span\r\n                      class=\"p-button-icon\"\r\n                      [class]=\"step.recipeId | iconSmClass: 'recipe'\"\r\n                    >\r\n                      @if (step.recipeObjectiveId) {\r\n                        <span>#{{ step.recipeObjectiveId }}</span>\r\n                      }\r\n                    </span>\r\n                    <i class=\"hover-icon fa-solid fa-circle-plus\"></i>\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip\r\n                        [id]=\"step.recipeId\"\r\n                        type=\"recipe\"\r\n                      ></lab-tooltip>\r\n                    </ng-template>\r\n                  </button>\r\n                }\r\n                @if (machineId | machineShow: data().game) {\r\n                  <p-dropdown\r\n                    labDropdownBase=\"icon\"\r\n                    [pTooltip]=\"tooltip\"\r\n                    [options]=\"\r\n                      step.recipe.producers | options: data().itemEntities\r\n                    \"\r\n                    [ngModel]=\"machineId\"\r\n                    (onChange)=\"\r\n                      changeRecipeField(\r\n                        step,\r\n                        $event.value,\r\n                        machinesState(),\r\n                        data(),\r\n                        RecipeField.Machine\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      @if (item) {\r\n                        <div class=\"d-flex\">\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                        </div>\r\n                      }\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"tooltip\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip\r\n                            [id]=\"item.value\"\r\n                            type=\"machine\"\r\n                          ></lab-tooltip>\r\n                        </ng-template>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip\r\n                        [id]=\"machineId\"\r\n                        type=\"machine\"\r\n                      ></lab-tooltip>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                }\r\n                @if (data().game === Game.Satisfactory) {\r\n                  <p-inputNumber\r\n                    #overclockInput\r\n                    suffix=\"%\"\r\n                    [min]=\"1\"\r\n                    [max]=\"250\"\r\n                    [step]=\"10\"\r\n                    [maxFractionDigits]=\"2\"\r\n                    [size]=\"3\"\r\n                    inputStyleClass=\"text-end\"\r\n                    [pTooltip]=\"'steps.overclockTooltip' | translate\"\r\n                    [ngModel]=\"step.recipeSettings.overclock\"\r\n                    (onBlur)=\"\r\n                      changeRecipeField(\r\n                        step,\r\n                        overclockInput.value ?? 100,\r\n                        machinesState(),\r\n                        data(),\r\n                        RecipeField.Overclock\r\n                      )\r\n                    \"\r\n                  >\r\n                  </p-inputNumber>\r\n                }\r\n                @if (data().game === Game.FinalFactory) {\r\n                  <p-inputNumber\r\n                    #duplicatorsInput\r\n                    [min]=\"0\"\r\n                    [step]=\"1\"\r\n                    [maxFractionDigits]=\"0\"\r\n                    [showButtons]=\"true\"\r\n                    [size]=\"3\"\r\n                    inputStyleClass=\"text-end\"\r\n                    [pTooltip]=\"'steps.modifierCountTooltip' | translate\"\r\n                    incrementButtonClass=\"p-button-text\"\r\n                    decrementButtonClass=\"p-button-text\"\r\n                    [ngModel]=\"step.recipeSettings.overclock\"\r\n                    (onBlur)=\"\r\n                      changeRecipeField(\r\n                        step,\r\n                        duplicatorsInput.value ?? 0,\r\n                        machinesState(),\r\n                        data(),\r\n                        RecipeField.Overclock\r\n                      )\r\n                    \"\r\n                  >\r\n                  </p-inputNumber>\r\n                }\r\n                @if (step.recipeSettings?.fuelId; as fuelId) {\r\n                  @if (step.recipe.isBurn) {\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <i\r\n                        class=\"padded\"\r\n                        [class]=\"fuelId | iconSmClass\"\r\n                        [pTooltip]=\"tooltip\"\r\n                      >\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip [id]=\"fuelId\" type=\"fuel\"></lab-tooltip>\r\n                        </ng-template>\r\n                      </i>\r\n                    </div>\r\n                  } @else {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      [pTooltip]=\"tooltip\"\r\n                      [ngModel]=\"fuelId\"\r\n                      [options]=\"step.recipeSettings.fuelOptions ?? []\"\r\n                      (onChange)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event.value,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.Fuel\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        <div class=\"d-flex\">\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"fuel\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip [id]=\"fuelId\" type=\"fuel\"></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                }\r\n                @if (step.recipeSettings?.moduleIds; as moduleIds) {\r\n                  @for (\r\n                    moduleId of moduleIds;\r\n                    track $index;\r\n                    let i = $index;\r\n                    let last = $last\r\n                  ) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      class=\"module-dropdown\"\r\n                      [class.last]=\"last\"\r\n                      [pTooltip]=\"moduleId !== 'module' ? tooltip : undefined\"\r\n                      tooltipPosition=\"top\"\r\n                      [options]=\"step.recipeSettings.moduleOptions ?? []\"\r\n                      [ngModel]=\"moduleId\"\r\n                      (onChange)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event.value,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.Modules,\r\n                          i\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"\r\n                            item.value !== 'module' ? tooltip : undefined\r\n                          \"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"module\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"moduleId\"\r\n                          type=\"module\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                }\r\n              </div>\r\n            }\r\n          </td>\r\n        } @else {\r\n          <td colspan=\"2\"></td>\r\n        }\r\n        <!-- Beacons -->\r\n        @if (columnsState().beacons.show) {\r\n          @if (step.recipeId && step.recipeSettings) {\r\n            <td class=\"w-0 pe-0\">\r\n              @for (\r\n                beacon of step.recipeSettings.beacons;\r\n                track $index;\r\n                let i = $index\r\n              ) {\r\n                <div class=\"d-flex\">\r\n                  @if (i === 0) {\r\n                    <button\r\n                      pButton\r\n                      pRipple\r\n                      type=\"button\"\r\n                      class=\"p-button-text p-button-rounded\"\r\n                      icon=\"fa-solid fa-plus\"\r\n                      (click)=\"\r\n                        addBeacon(\r\n                          step.recipeObjectiveId ?? step.recipeId,\r\n                          step.recipeObjectiveId != null\r\n                        )\r\n                      \"\r\n                    ></button>\r\n                  } @else {\r\n                    <button\r\n                      pButton\r\n                      pRipple\r\n                      type=\"button\"\r\n                      class=\"p-button-text p-button-rounded\"\r\n                      icon=\"fa-solid fa-xmark\"\r\n                      (click)=\"\r\n                        removeBeacon(\r\n                          step.recipeObjectiveId ?? step.recipeId,\r\n                          i,\r\n                          step.recipeObjectiveId != null\r\n                        )\r\n                      \"\r\n                    ></button>\r\n                  }\r\n                  @if (beacon.count) {\r\n                    <lab-input-number\r\n                      [pTooltip]=\"'steps.beaconEachTooltip' | translate\"\r\n                      tooltipPosition=\"left\"\r\n                      class=\"text-end\"\r\n                      width=\"2.5rem\"\r\n                      [value]=\"beacon.count\"\r\n                      [textButtons]=\"true\"\r\n                      (setValue)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.BeaconCount,\r\n                          i\r\n                        )\r\n                      \"\r\n                    ></lab-input-number>\r\n                  }\r\n                </div>\r\n              }\r\n            </td>\r\n            <td class=\"ps-0\">\r\n              @for (\r\n                beacon of step.recipeSettings.beacons;\r\n                track $index;\r\n                let i = $index\r\n              ) {\r\n                <div class=\"d-flex\">\r\n                  @if (beacon.id) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      [pTooltip]=\"tooltip\"\r\n                      [options]=\"options().beacons\"\r\n                      [ngModel]=\"beacon.id\"\r\n                      (onChange)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event.value,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.Beacon,\r\n                          i\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"beacon\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"beacon.id\"\r\n                          type=\"beacon\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                  @for (\r\n                    moduleId of beacon.moduleIds;\r\n                    track $index;\r\n                    let j = $index;\r\n                    let last = $last\r\n                  ) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      class=\"module-dropdown\"\r\n                      [class.last]=\"last\"\r\n                      [pTooltip]=\"moduleId !== 'module' ? tooltip : undefined\"\r\n                      tooltipPosition=\"top\"\r\n                      [options]=\"beacon.moduleOptions ?? []\"\r\n                      [ngModel]=\"moduleId\"\r\n                      (onChange)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event.value,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.BeaconModules,\r\n                          i,\r\n                          j\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"\r\n                            item.value !== 'module' ? tooltip : undefined\r\n                          \"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"module\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"moduleId\"\r\n                          type=\"module\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                  @if (beacon.total) {\r\n                    <lab-input-number\r\n                      [pTooltip]=\"'steps.beaconTotalTooltip' | translate\"\r\n                      class=\"text-end\"\r\n                      width=\"3rem\"\r\n                      [value]=\"beacon.total\"\r\n                      [textButtons]=\"true\"\r\n                      (setValue)=\"\r\n                        changeRecipeField(\r\n                          step,\r\n                          $event,\r\n                          machinesState(),\r\n                          data(),\r\n                          RecipeField.BeaconTotal,\r\n                          i\r\n                        )\r\n                      \"\r\n                    ></lab-input-number>\r\n                  }\r\n                </div>\r\n              }\r\n            </td>\r\n          } @else {\r\n            <td colspan=\"2\"></td>\r\n          }\r\n        }\r\n        <!-- Power -->\r\n        @if (columnsState().power.show) {\r\n          <td class=\"text-end\">\r\n            @if (step.power && step.power.nonzero()) {\r\n              <span class=\"monospace\">{{\r\n                step.power\r\n                  | power: columnsState().power.precision : effectivePowerUnit()\r\n              }}</span>\r\n            }\r\n          </td>\r\n        }\r\n        <!-- Pollution -->\r\n        @if (columnsState().pollution.show) {\r\n          <td class=\"text-end\">\r\n            @if (step.pollution && step.pollution.nonzero()) {\r\n              <span class=\"monospace\">{{\r\n                step.pollution | rate: columnsState().pollution.precision\r\n              }}</span>\r\n            }\r\n          </td>\r\n        }\r\n        <!-- Link -->\r\n        @if (columnsState().link.show) {\r\n          <td class=\"w-0 px-1\">\r\n            <div class=\"d-flex\">\r\n              <a\r\n                class=\"text-decoration-none\"\r\n                target=\"_blank\"\r\n                [href]=\"step | stepHref: routerSvc.zipConfig() : data()\"\r\n              >\r\n                <button\r\n                  pButton\r\n                  pRipple\r\n                  type=\"button\"\r\n                  class=\"p-button-text p-button-rounded\"\r\n                  icon=\"fa-solid fa-arrow-up-right-from-square\"\r\n                  [pTooltip]=\"'steps.openNewTabTooltip' | translate\"\r\n                  tooltipPosition=\"left\"\r\n                ></button>\r\n              </a>\r\n              @if (\r\n                (step.recipeId && stepsModified().recipes[step.recipeId]) ||\r\n                (step.itemId && stepsModified().items[step.itemId]) ||\r\n                (step.recipeObjectiveId &&\r\n                  stepsModified().objectives[step.recipeObjectiveId])\r\n              ) {\r\n                <button\r\n                  pButton\r\n                  pRipple\r\n                  type=\"button\"\r\n                  class=\"p-button-text p-button-rounded\"\r\n                  icon=\"fa-solid fa-rotate-left\"\r\n                  [pTooltip]=\"'steps.stepUndoTooltip' | translate\"\r\n                  tooltipPosition=\"left\"\r\n                  (click)=\"resetStep(step)\"\r\n                ></button>\r\n              }\r\n            </div>\r\n          </td>\r\n        }\r\n      </tr>\r\n    }\r\n  </ng-template>\r\n  <ng-template pTemplate=\"rowexpansion\" let-_step>\r\n    <!-- Details row tab menu -->\r\n    @if (_step | asStep; as step) {\r\n      <tr class=\"detail\">\r\n        <td class=\"px-1\">\r\n          <a\r\n            class=\"text-decoration-none\"\r\n            routerLink=\".\"\r\n            [relativeTo]=\"route\"\r\n            queryParamsHandling=\"preserve\"\r\n            [fragment]=\"step.id\"\r\n          >\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-text p-button-rounded\"\r\n              icon=\"fa-solid fa-link\"\r\n            ></button>\r\n          </a>\r\n        </td>\r\n        <td colspan=\"100\">\r\n          <p-tabMenu\r\n            #expandTabMenu\r\n            [model]=\"stepDetails()[step.id].tabs\"\r\n            [activeItem]=\"activeItem[step | stepId]\"\r\n            (activeItemChange)=\"setActiveItem(step, $event)\"\r\n          >\r\n            <ng-template pTemplate=\"item\" let-item>\r\n              <a class=\"p-menuitem-link\">\r\n                <span\r\n                  class=\"p-menuitem-icon\"\r\n                  [class]=\"$any(stepDetailIcon)[item.label]\"\r\n                ></span>\r\n                <span class=\"p-menuitem-text\">{{\r\n                  'options.stepDetailTab.' + item.label | translate\r\n                }}</span>\r\n              </a>\r\n            </ng-template>\r\n          </p-tabMenu>\r\n        </td>\r\n      </tr>\r\n      @switch (expandTabMenu.activeItem?.label) {\r\n        @case (StepDetailTab.Item) {\r\n          <!-- Item row details -->\r\n          @if (stepDetails()[step.id].outputs.length) {\r\n            <tr class=\"detail\">\r\n              <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n              <td colspan=\"100\" class=\"fw-bold\">\r\n                {{ 'steps.sources' | translate }}\r\n              </td>\r\n            </tr>\r\n          }\r\n          @for (output of stepDetails()[step.id].outputs; track $index) {\r\n            @if (step.itemId) {\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  detailRow;\r\n                  context: {\r\n                    items: step.items?.mul(output.value),\r\n                    itemId: step.itemId,\r\n                    belts: step.belts?.mul(output.value),\r\n                    beltId: itemsState()[step.itemId].beltId,\r\n                    wagons: step.wagons?.mul(output.value),\r\n                    wagonId: itemsState()[step.itemId].wagonId,\r\n                    machines: output.step?.machines,\r\n                    machineId: output.step?.recipeSettings?.machineId,\r\n                    recipeId: output.step?.recipeId,\r\n                    recipeObjectiveId: output.step?.recipeObjectiveId,\r\n                    percent: output.value,\r\n                    percentOnDest: true,\r\n                    destId: step.itemId,\r\n                    inputs: output.inputs\r\n                  }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            }\r\n          }\r\n          @if (step.parents) {\r\n            <tr class=\"detail\">\r\n              <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n              <td colspan=\"100\" class=\"fw-bold\">\r\n                {{ 'steps.destinations' | translate }}\r\n              </td>\r\n            </tr>\r\n          }\r\n          @for (\r\n            parent of step.parents | keyvalue: trackSvc.sortByValue;\r\n            track parent.key\r\n          ) {\r\n            @if (step.itemId) {\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  detailRow;\r\n                  context: {\r\n                    items: step.items?.mul(parent.value),\r\n                    itemId: step.itemId,\r\n                    belts: step.belts?.mul(parent.value),\r\n                    beltId: itemsState()[step.itemId].beltId,\r\n                    wagons: step.wagons?.mul(parent.value),\r\n                    wagonId: itemsState()[step.itemId].wagonId,\r\n                    machines:\r\n                      stepDetails()[step.id].outputs.length === 1\r\n                        ? step.machines?.mul(parent.value)\r\n                        : null,\r\n                    machineId:\r\n                      stepDetails()[step.id].outputs.length === 1\r\n                        ? step.recipeSettings?.machineId\r\n                        : null,\r\n                    recipeId: step.recipeId,\r\n                    recipeObjectiveId: step.recipeObjectiveId,\r\n                    percent: parent.value,\r\n                    destId: stepById()[parent.key]?.recipeId,\r\n                    destRecipeObjectiveId:\r\n                      stepById()[parent.key]?.recipeObjectiveId,\r\n                    destIsRecipe: true,\r\n                    outputs: parent.key === ''\r\n                  }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            }\r\n          }\r\n        }\r\n        @case (StepDetailTab.Recipe) {\r\n          <!-- Recipe row details -->\r\n          @if (step.recipe) {\r\n            @if (data().game === Game.Factorio && step.recipe.isMining) {\r\n              <tr class=\"detail\">\r\n                <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n                <td colspan=\"100\" class=\"fw-bold\">\r\n                  {{ 'steps.depletion' | translate }}\r\n                </td>\r\n              </tr>\r\n              @for (\r\n                output of step.outputs | keyvalue: trackSvc.sortByValue;\r\n                track output.key\r\n              ) {\r\n                @if (\r\n                  {\r\n                    step: stepByItemEntities()[output.key],\r\n                    percent: step.outputs?.[output.key]\r\n                  };\r\n                  as row\r\n                ) {\r\n                  @if (row.step && row.percent && row.step.items) {\r\n                    <ng-container\r\n                      *ngTemplateOutlet=\"\r\n                        detailRow;\r\n                        context: {\r\n                          items: row.step.items\r\n                            .mul(row.percent)\r\n                            .div(step.recipe.productivity),\r\n                          itemId: output.key\r\n                        }\r\n                      \"\r\n                    >\r\n                    </ng-container>\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            @if ((step.recipe.in | keyvalue).length) {\r\n              <tr class=\"detail\">\r\n                <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n                <td colspan=\"100\" class=\"fw-bold\">\r\n                  {{ 'steps.inputs' | translate }}\r\n                </td>\r\n              </tr>\r\n              @for (\r\n                input of step.recipe.in | keyvalue: trackSvc.sortByValue;\r\n                track input.key\r\n              ) {\r\n                @if (\r\n                  {\r\n                    step: stepByItemEntities()[input.key],\r\n                    percent: stepByItemEntities()[input.key].parents?.[step.id]\r\n                  };\r\n                  as row\r\n                ) {\r\n                  @if (row.step.itemId && row.percent) {\r\n                    @if (\r\n                      stepDetails()[row.step.id].outputs.length === 1 &&\r\n                        stepDetails()[row.step.id].outputs[0];\r\n                      as output\r\n                    ) {\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                          detailRow;\r\n                          context: {\r\n                            items: row.step.items?.mul(row.percent),\r\n                            itemId: input.key,\r\n                            belts: row.step.belts?.mul(row.percent),\r\n                            beltId: itemsState()[row.step.itemId].beltId,\r\n                            wagons: row.step.wagons?.mul(row.percent),\r\n                            wagonId: itemsState()[row.step.itemId].wagonId,\r\n                            machines: output.step?.machines,\r\n                            machineId: output.step?.recipeSettings?.machineId,\r\n                            recipeId: output.step?.recipeId,\r\n                            recipeObjectiveId: output.step?.recipeObjectiveId,\r\n                            percent: row.percent,\r\n                            destId: step.recipeId,\r\n                            destRecipeObjectiveId: step.recipeObjectiveId,\r\n                            destIsRecipe: true\r\n                          }\r\n                        \"\r\n                      >\r\n                      </ng-container>\r\n                    } @else {\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                          detailRow;\r\n                          context: {\r\n                            items: row.step.items?.mul(row.percent),\r\n                            itemId: input.key,\r\n                            belts: row.step.belts?.mul(row.percent),\r\n                            beltId: itemsState()[row.step.itemId].beltId,\r\n                            wagons: row.step.wagons?.mul(row.percent),\r\n                            wagonId: itemsState()[row.step.itemId].wagonId,\r\n                            percent: row.percent,\r\n                            destId: step.recipeId,\r\n                            destRecipeObjectiveId: step.recipeObjectiveId,\r\n                            destIsRecipe: true\r\n                          }\r\n                        \"\r\n                      >\r\n                      </ng-container>\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            <tr class=\"detail\">\r\n              <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n              <td colspan=\"100\" class=\"fw-bold\">\r\n                {{ 'steps.time' | translate }}\r\n              </td>\r\n            </tr>\r\n            <tr class=\"detail\">\r\n              <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  step.recipe.time | rate: columnsState().items.precision\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex\"><i class=\"lab-icon time\"></i></div>\r\n              </td>\r\n              <td colspan=\"100\"></td>\r\n            </tr>\r\n            <tr class=\"detail\">\r\n              <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n              <td colspan=\"100\" class=\"fw-bold\">\r\n                {{ 'steps.outputs' | translate }}\r\n              </td>\r\n            </tr>\r\n            @for (\r\n              output of step.recipe.out | keyvalue: trackSvc.sortByValue;\r\n              track output.key\r\n            ) {\r\n              @if (\r\n                {\r\n                  step: stepByItemEntities()[output.key],\r\n                  percent: step.outputs?.[output.key]\r\n                };\r\n                as row\r\n              ) {\r\n                @if (row.step.itemId && row.percent) {\r\n                  <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                      detailRow;\r\n                      context: {\r\n                        items: row.step.items?.mul(row.percent),\r\n                        itemId: output.key,\r\n                        belts: row.step.belts?.mul(row.percent),\r\n                        beltId: itemsState()[row.step.itemId].beltId,\r\n                        wagons: row.step.wagons?.mul(row.percent),\r\n                        wagonId: itemsState()[row.step.itemId].wagonId,\r\n                        machines: step.machines,\r\n                        machineId: step.recipeSettings?.machineId,\r\n                        recipeId: step.recipeId,\r\n                        recipeObjectiveId: step.recipeObjectiveId,\r\n                        percent: row.percent,\r\n                        percentOnDest: true,\r\n                        destId: output.key,\r\n                        destRecipeObjectiveId: step.recipeObjectiveId\r\n                      }\r\n                    \"\r\n                  >\r\n                  </ng-container>\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        @case (StepDetailTab.Machine) {\r\n          <!-- Machine row details -->\r\n          <tr class=\"detail\">\r\n            <td></td>\r\n            <td colspan=\"100\">\r\n              @if (step.recipeId && step.recipe && step.machines) {\r\n                <div class=\"d-flex align-items-center\">\r\n                  <table class=\"mw-0\">\r\n                    @for (\r\n                      input of step.recipe.in | keyvalue: trackSvc.sortByValue;\r\n                      track input.key\r\n                    ) {\r\n                      @if (\r\n                        {\r\n                          step: stepByItemEntities()[input.key],\r\n                          percent:\r\n                            stepByItemEntities()[input.key].parents?.[step.id]\r\n                        };\r\n                        as row\r\n                      ) {\r\n                        @if (row.percent) {\r\n                          <tr>\r\n                            <td>\r\n                              @if (row.step.items) {\r\n                                <ng-container\r\n                                  *ngTemplateOutlet=\"\r\n                                    machineValueCell;\r\n                                    context: {\r\n                                      value:\r\n                                        row.step.items\r\n                                          .mul(row.percent)\r\n                                          .div(step.machines)\r\n                                        | rate: columnsState().items.precision,\r\n                                      itemId: input.key\r\n                                    }\r\n                                  \"\r\n                                >\r\n                                </ng-container>\r\n                              }\r\n                            </td>\r\n                            @if (columnsState().belts.show) {\r\n                              <td>\r\n                                @if (row.step.belts) {\r\n                                  @if (\r\n                                    itemsState()[input.key].beltId;\r\n                                    as beltId\r\n                                  ) {\r\n                                    <ng-container\r\n                                      *ngTemplateOutlet=\"\r\n                                        machineValueCell;\r\n                                        context: {\r\n                                          value:\r\n                                            row.step.belts\r\n                                              .mul(row.percent)\r\n                                              .div(step.machines)\r\n                                            | rate\r\n                                              : columnsState().belts.precision,\r\n                                          itemId: beltId\r\n                                        }\r\n                                      \"\r\n                                    >\r\n                                    </ng-container>\r\n                                  }\r\n                                }\r\n                              </td>\r\n                            }\r\n                            @if (data().game === Game.Factorio) {\r\n                              <td>\r\n                                @if (\r\n                                  itemsState()[input.key].beltId !==\r\n                                    ItemId.Pipe && row.step.items\r\n                                ) {\r\n                                  @if (\r\n                                    row.step.items\r\n                                      .mul(row.percent)\r\n                                      .div(step.machines)\r\n                                      .div(dispRateInfo().value)\r\n                                      | inserterSpeed: settings();\r\n                                    as ins\r\n                                  ) {\r\n                                    <ng-container\r\n                                      *ngTemplateOutlet=\"\r\n                                        machineValueCell;\r\n                                        context: {\r\n                                          value: ins.value | rate: 1,\r\n                                          itemId: ins.id\r\n                                        }\r\n                                      \"\r\n                                    >\r\n                                    </ng-container>\r\n                                  }\r\n                                }\r\n                              </td>\r\n                            }\r\n                          </tr>\r\n                        }\r\n                      }\r\n                    }\r\n                  </table>\r\n                  <i class=\"fa-solid fa-arrow-right mx-3\"></i>\r\n                  <table class=\"mw-0\">\r\n                    <tr>\r\n                      <td class=\"w-0 text-end\">\r\n                        <span class=\"monospace\">{{\r\n                          rational(1) | rate: columnsState().machines.precision\r\n                        }}</span>\r\n                      </td>\r\n                      <td>\r\n                        @if (step.recipeSettings?.machineId; as machineId) {\r\n                          <div class=\"d-flex align-items-center\">\r\n                            <i\r\n                              [class]=\"step.recipeId | iconClass: 'recipe'\"\r\n                              [pTooltip]=\"tooltip\"\r\n                            >\r\n                              <ng-template #tooltip>\r\n                                <lab-tooltip [id]=\"step.recipeId\" type=\"recipe\">\r\n                                </lab-tooltip>\r\n                              </ng-template>\r\n                            </i>\r\n                            <i\r\n                              [class]=\"machineId | iconClass\"\r\n                              [pTooltip]=\"tooltip\"\r\n                            >\r\n                              <ng-template #tooltip>\r\n                                <lab-tooltip\r\n                                  [id]=\"machineId\"\r\n                                  type=\"machine\"\r\n                                ></lab-tooltip>\r\n                              </ng-template>\r\n                            </i>\r\n                          </div>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"w-0 text-end\">\r\n                        <span class=\"monospace\">{{\r\n                          dispRateInfo().value\r\n                            | rate: columnsState().machines.precision\r\n                        }}</span>\r\n                      </td>\r\n                      <td><i class=\"lab-icon time\"></i></td>\r\n                    </tr>\r\n                  </table>\r\n                  <i class=\"fa-solid fa-arrow-right mx-3\"></i>\r\n                  <table class=\"mw-0\">\r\n                    @for (\r\n                      output of step.recipe.out\r\n                        | keyvalue: trackSvc.sortByValue;\r\n                      track output.key\r\n                    ) {\r\n                      @if (output.value.div(step.recipe.time); as items) {\r\n                        <tr>\r\n                          @if (data().game === Game.Factorio) {\r\n                            <td>\r\n                              @if (\r\n                                itemsState()[output.key].beltId !== ItemId.Pipe\r\n                              ) {\r\n                                @if (\r\n                                  items | inserterSpeed: settings();\r\n                                  as ins\r\n                                ) {\r\n                                  <ng-container\r\n                                    *ngTemplateOutlet=\"\r\n                                      machineValueCell;\r\n                                      context: {\r\n                                        value: ins.value | rate: 1,\r\n                                        itemId: ins.id\r\n                                      }\r\n                                    \"\r\n                                  >\r\n                                  </ng-container>\r\n                                }\r\n                              }\r\n                            </td>\r\n                          }\r\n                          @if (columnsState().belts.show) {\r\n                            <td>\r\n                              @if (itemsState()[output.key].beltId; as beltId) {\r\n                                <ng-container\r\n                                  *ngTemplateOutlet=\"\r\n                                    machineValueCell;\r\n                                    context: {\r\n                                      value:\r\n                                        items.div(beltSpeed()[beltId])\r\n                                        | rate: columnsState().belts.precision,\r\n                                      itemId: beltId\r\n                                    }\r\n                                  \"\r\n                                >\r\n                                </ng-container>\r\n                              }\r\n                            </td>\r\n                          }\r\n                          <td>\r\n                            <ng-container\r\n                              *ngTemplateOutlet=\"\r\n                                machineValueCell;\r\n                                context: {\r\n                                  value:\r\n                                    items.mul(dispRateInfo().value)\r\n                                    | rate: columnsState().items.precision,\r\n                                  itemId: output.key\r\n                                }\r\n                              \"\r\n                            >\r\n                            </ng-container>\r\n                          </td>\r\n                        </tr>\r\n                      }\r\n                    }\r\n                  </table>\r\n                  <ng-template\r\n                    #machineValueCell\r\n                    let-value=\"value\"\r\n                    let-itemId=\"itemId\"\r\n                  >\r\n                    <div class=\"d-flex align-items-center justify-content-end\">\r\n                      <span class=\"monospace\">{{ value }}</span>\r\n                      <i [class]=\"itemId | iconClass\" [pTooltip]=\"tooltip\">\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip [id]=\"itemId\"></lab-tooltip>\r\n                        </ng-template>\r\n                      </i>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n              }\r\n              @if (data().game === Game.Factorio) {\r\n                <small\r\n                  [innerHTML]=\"'steps.inserterCountInfo' | translate\"\r\n                ></small>\r\n              }\r\n            </td>\r\n          </tr>\r\n        }\r\n        @case (StepDetailTab.Recipes) {\r\n          <!-- Recipes row details -->\r\n          @if (step.itemId && stepDetails()[step.id]; as stepDetails) {\r\n            <tr class=\"detail\">\r\n              <td></td>\r\n              <td colspan=\"100\">\r\n                <div>\r\n                  <div class=\"fw-bold\">\r\n                    {{ 'steps.includedRecipes' | translate }}\r\n                  </div>\r\n                  <div class=\"mb-2\">\r\n                    <small>{{ 'steps.includedRecipesInfo' | translate }}</small>\r\n                  </div>\r\n                  <p-checkbox\r\n                    [ngModel]=\"stepDetails.allRecipesIncluded\"\r\n                    [binary]=\"true\"\r\n                    [label]=\"'picker.includeAll' | translate\"\r\n                    (onChange)=\"\r\n                      toggleRecipes(\r\n                        stepDetails.recipeIds,\r\n                        stepDetails.allRecipesIncluded,\r\n                        data()\r\n                      )\r\n                    \"\r\n                  ></p-checkbox>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"detail\">\r\n              <td></td>\r\n              <td colspan=\"100\">\r\n                <div class=\"d-flex flex-wrap\">\r\n                  @for (recipeId of stepDetails.recipeIds; track recipeId) {\r\n                    <button\r\n                      pButton\r\n                      pRipple\r\n                      type=\"button\"\r\n                      class=\"p-button-text hover-action me-2\"\r\n                      [class.hover-active]=\"recipesState()[recipeId].excluded\"\r\n                      [icon]=\"recipeId | iconSmClass: 'recipe'\"\r\n                      [pTooltip]=\"tooltip\"\r\n                      (click)=\"toggleRecipe(recipeId, recipesState(), data())\"\r\n                    >\r\n                      <i class=\"hover-icon fa-solid fa-eye-slash\"></i>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"recipeId\"\r\n                          type=\"recipe\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </button>\r\n                  }\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          }\r\n        }\r\n      }\r\n    }\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    @if (focus()) {\r\n      <tr>\r\n        <td colspan=\"100\">\r\n          <div class=\"d-flex justify-content-center\">\r\n            <span>{{ 'steps.emptyMessage' | translate }}</span>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    }\r\n  </ng-template>\r\n  <ng-template #emptyCol2>\r\n    <td colspan=\"2\"></td>\r\n  </ng-template>\r\n  <ng-template #leftPad>\r\n    <td></td>\r\n    @if (!focus()) {\r\n      @if (columnsState().checkbox.show) {\r\n        <td></td>\r\n      }\r\n      @if (columnsState().tree.show) {\r\n        <td></td>\r\n      }\r\n    }\r\n  </ng-template>\r\n  <ng-template\r\n    #detailRow\r\n    let-items=\"items\"\r\n    let-itemId=\"itemId\"\r\n    let-belts=\"belts\"\r\n    let-beltId=\"beltId\"\r\n    let-wagons=\"wagons\"\r\n    let-wagonId=\"wagonId\"\r\n    let-machines=\"machines\"\r\n    let-machineId=\"machineId\"\r\n    let-recipeId=\"recipeId\"\r\n    let-recipeObjectiveId=\"recipeObjectiveId\"\r\n    let-percent=\"percent\"\r\n    let-percentOnDest=\"percentOnDest\"\r\n    let-destId=\"destId\"\r\n    let-destRecipeObjectiveId=\"destRecipeObjectiveId\"\r\n    let-destIsRecipe=\"destIsRecipe\"\r\n    let-inputs=\"inputs\"\r\n    let-outputs=\"outputs\"\r\n  >\r\n    <tr class=\"detail\">\r\n      @if (itemId) {\r\n        <ng-container *ngTemplateOutlet=\"leftPad\"></ng-container>\r\n        <td class=\"w-0 text-end\">\r\n          <span class=\"monospace\">{{\r\n            items | rate: columnsState().items.precision\r\n          }}</span>\r\n        </td>\r\n        <td class=\"ps-0\">\r\n          <div class=\"d-flex\">\r\n            <i [class]=\"itemId | iconClass\" [pTooltip]=\"tooltip\">\r\n              <ng-template #tooltip>\r\n                <lab-tooltip [id]=\"itemId\"></lab-tooltip>\r\n              </ng-template>\r\n            </i>\r\n          </div>\r\n        </td>\r\n        @if (columnsState().belts.show && belts && beltId) {\r\n          <td class=\"w-0 text-end\">\r\n            <span class=\"monospace\">{{\r\n              belts | rate: columnsState().belts.precision\r\n            }}</span>\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <div class=\"d-flex\">\r\n              <i [class]=\"beltId | iconClass\" [pTooltip]=\"tooltip\">\r\n                <ng-template #tooltip>\r\n                  <lab-tooltip [id]=\"beltId\" type=\"belt\"></lab-tooltip>\r\n                </ng-template>\r\n              </i>\r\n            </div>\r\n          </td>\r\n        }\r\n        @if (columnsState().wagons.show && wagons && wagonId) {\r\n          <td class=\"w-0 text-end\">\r\n            <span class=\"monospace\">{{\r\n              wagons | rate: columnsState().wagons.precision\r\n            }}</span>\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <div class=\"d-flex\">\r\n              @if (data().cargoWagonIds.indexOf(wagonId) !== -1) {\r\n                <i [class]=\"wagonId | iconClass\" [pTooltip]=\"tooltip\">\r\n                  <ng-template #tooltip>\r\n                    <lab-tooltip\r\n                      [id]=\"wagonId\"\r\n                      type=\"cargo-wagon\"\r\n                    ></lab-tooltip>\r\n                  </ng-template>\r\n                </i>\r\n              } @else {\r\n                <i [class]=\"wagonId | iconClass\" [pTooltip]=\"tooltip\">\r\n                  <ng-template #tooltip>\r\n                    <lab-tooltip\r\n                      [id]=\"wagonId\"\r\n                      type=\"fluid-wagon\"\r\n                    ></lab-tooltip>\r\n                  </ng-template>\r\n                </i>\r\n              }\r\n            </div>\r\n          </td>\r\n        }\r\n        <td class=\"w-0 text-end\">\r\n          @if (\r\n            machines &&\r\n            machines.nonzero() &&\r\n            (machineId | machineShowRate: data().game)\r\n          ) {\r\n            <span class=\"monospace\">{{\r\n              machines\r\n                | machineRate: columnsState().machines.precision : machineId\r\n            }}</span>\r\n          }\r\n        </td>\r\n        <td class=\"p-0\" colspan=\"100\">\r\n          <div class=\"d-flex align-items-center\">\r\n            @if (inputs) {\r\n              <div class=\"position-absolute\">\r\n                {{ 'steps.inputs' | translate }}\r\n              </div>\r\n            }\r\n            @if (machineId | machineShow: data().game) {\r\n              <i [class]=\"recipeId | iconClass: 'recipe'\" [pTooltip]=\"tooltip\">\r\n                @if (recipeObjectiveId) {\r\n                  <span>#{{ recipeObjectiveId }}</span>\r\n                }\r\n                <ng-template #tooltip>\r\n                  <lab-tooltip [id]=\"recipeId\" type=\"recipe\"></lab-tooltip>\r\n                </ng-template>\r\n              </i>\r\n              <i [class]=\"machineId | iconClass\" [pTooltip]=\"tooltip\">\r\n                <ng-template #tooltip>\r\n                  <lab-tooltip [id]=\"machineId\" type=\"machine\"></lab-tooltip>\r\n                </ng-template>\r\n              </i>\r\n            } @else {\r\n              <div class=\"d-flex invisible\">\r\n                <i class=\"lab-icon\"></i>\r\n              </div>\r\n              <div class=\"d-flex invisible\">\r\n                <i class=\"lab-icon\"></i>\r\n              </div>\r\n            }\r\n            @if (percent) {\r\n              @if (percentOnDest) {\r\n                <i class=\"m-1 p-2 fa-solid fa-arrow-right\"></i>\r\n              }\r\n              <span class=\"monospace\">{{ percent | rate: -2 | leftPad }}%</span>\r\n              @if (!percentOnDest) {\r\n                <i class=\"m-1 p-2 fa-solid fa-arrow-right\"></i>\r\n              }\r\n              @if (destId) {\r\n                <i\r\n                  [class]=\"\r\n                    destId | iconClass: (destIsRecipe ? 'recipe' : 'item')\r\n                  \"\r\n                  [pTooltip]=\"tooltip\"\r\n                >\r\n                  @if (destRecipeObjectiveId) {\r\n                    <span>#{{ destRecipeObjectiveId }}</span>\r\n                  }\r\n                  <ng-template #tooltip>\r\n                    <lab-tooltip\r\n                      [id]=\"destId\"\r\n                      [type]=\"destIsRecipe ? 'recipe' : 'item'\"\r\n                    ></lab-tooltip>\r\n                  </ng-template>\r\n                </i>\r\n              }\r\n              @if (outputs) {\r\n                <span>\r\n                  {{ 'steps.outputs' | translate }}\r\n                </span>\r\n              }\r\n            }\r\n          </div>\r\n        </td>\r\n      }\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"footer\">\r\n    @if (!focus()) {\r\n      <tr>\r\n        <td></td>\r\n        @if (columnsState().checkbox.show) {\r\n          <td></td>\r\n        }\r\n        @if (columnsState().tree.show) {\r\n          <td></td>\r\n        }\r\n        <td colspan=\"2\">\r\n          {{ 'steps.total' | translate }}\r\n        </td>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: {\r\n              columnSettings: columnsState().belts,\r\n              totals: totals().belts,\r\n              type: 'belt'\r\n            }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: {\r\n              columnSettings: columnsState().wagons,\r\n              totals: totals().wagons\r\n            }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: {\r\n              columnSettings: columnsState().machines,\r\n              totals: totals().machines,\r\n              modulesTotals: totals().modules,\r\n              type: 'machine'\r\n            }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: {\r\n              columnSettings: columnsState().beacons,\r\n              totals: totals().beacons,\r\n              modulesTotals: totals().beaconModules,\r\n              type: 'beacon'\r\n            }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        @if (columnsState().power.show) {\r\n          <td class=\"text-end inherit\">\r\n            <span class=\"monospace\">{{\r\n              totals().power\r\n                | power: columnsState().power.precision : effectivePowerUnit()\r\n            }}</span>\r\n          </td>\r\n        }\r\n        @if (columnsState().pollution.show) {\r\n          <td class=\"text-end inherit\">\r\n            <span class=\"monospace\">{{\r\n              totals().pollution | rate: columnsState().pollution.precision\r\n            }}</span>\r\n          </td>\r\n        }\r\n        @if (columnsState().link.show) {\r\n          <td></td>\r\n        }\r\n      </tr>\r\n    }\r\n    <ng-template\r\n      #totalCell\r\n      let-columnSettings=\"columnSettings\"\r\n      let-totals=\"totals\"\r\n      let-type=\"type\"\r\n      let-modulesTotals=\"modulesTotals\"\r\n    >\r\n      @if (columnSettings.show) {\r\n        <td class=\"w-0 text-end inherit\">\r\n          @for (tot of totals | keyvalue: trackSvc.sortByValue; track tot.key) {\r\n            <div class=\"py-2 icon-height\">\r\n              <span class=\"monospace\">{{\r\n                tot.value | rate: columnSettings.precision\r\n              }}</span>\r\n            </div>\r\n          }\r\n        </td>\r\n        <td class=\"ps-0 inherit\">\r\n          <div class=\"d-flex\">\r\n            <div class=\"d-flex flex-column justify-content-center\">\r\n              @for (\r\n                tot of totals | keyvalue: trackSvc.sortByValue;\r\n                track tot.key\r\n              ) {\r\n                @if (data().itemEntities[tot.key]) {\r\n                  <i\r\n                    class=\"d-block\"\r\n                    [class]=\"tot.key | iconClass\"\r\n                    [pTooltip]=\"tooltip\"\r\n                  >\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip [id]=\"tot.key\" [type]=\"type\"></lab-tooltip>\r\n                    </ng-template>\r\n                  </i>\r\n                } @else {\r\n                  <i\r\n                    class=\"d-block\"\r\n                    [class]=\"tot.key | iconClass: 'recipe'\"\r\n                    [pTooltip]=\"tooltip\"\r\n                  >\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip [id]=\"tot.key\" type=\"recipe\"></lab-tooltip>\r\n                    </ng-template>\r\n                  </i>\r\n                }\r\n              }\r\n            </div>\r\n            <div class=\"modules-column\">\r\n              @for (\r\n                tot of modulesTotals | keyvalue: trackSvc.sortByValue;\r\n                track tot.key\r\n              ) {\r\n                <div class=\"p-2 icon-height text-end\">\r\n                  <span class=\"monospace\">{{ tot.value }}</span>\r\n                </div>\r\n                <i\r\n                  class=\"d-block\"\r\n                  [class]=\"tot.key | iconClass: 'item'\"\r\n                  [pTooltip]=\"tot.key !== 'module' ? tooltip : undefined\"\r\n                >\r\n                  <ng-template #tooltip>\r\n                    <lab-tooltip [id]=\"tot.key\" type=\"module\"></lab-tooltip>\r\n                  </ng-template>\r\n                </i>\r\n              }\r\n            </div>\r\n          </div>\r\n        </td>\r\n      }\r\n    </ng-template>\r\n  </ng-template>\r\n</p-table>\r\n", "import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[labNoDrag]',\r\n})\r\nexport class NoDragDirective {\r\n  @HostListener('mousedown', ['$event']) onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  @HostListener('touchstart', ['$event']) onTouchStart(\r\n    event: TouchEvent,\r\n  ): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n", "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  inject,\r\n} from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Message } from 'primeng/api';\r\nimport { first } from 'rxjs';\r\n\r\nimport { PickerComponent } from '~/components/picker/picker.component';\r\nimport {\r\n  AdjustedDataset,\r\n  DisplayRate,\r\n  displayRateOptions,\r\n  MatrixResult,\r\n  MaximizeType,\r\n  Objective,\r\n  ObjectiveBase,\r\n  ObjectiveType,\r\n  objectiveTypeOptions,\r\n  ObjectiveUnit,\r\n  rational,\r\n  Rational,\r\n  SimplexResultType,\r\n} from '~/models';\r\nimport { ContentService, TrackService } from '~/services';\r\nimport {\r\n  Items,\r\n  LabState,\r\n  Objectives,\r\n  Preferences,\r\n  Recipes,\r\n  Settings,\r\n} from '~/store';\r\nimport { RateUtility } from '~/utilities';\r\n\r\n@Component({\r\n  selector: 'lab-objectives',\r\n  templateUrl: './objectives.component.html',\r\n  styleUrls: ['./objectives.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ObjectivesComponent {\r\n  store = inject(Store<LabState>);\r\n  translateSvc = inject(TranslateService);\r\n  contentSvc = inject(ContentService);\r\n  trackSvc = inject(TrackService);\r\n\r\n  _objectives = this.store.selectSignal(Objectives.getObjectives);\r\n  result = this.store.selectSignal(Objectives.getMatrixResult);\r\n  itemsState = this.store.selectSignal(Items.getItemsState);\r\n  recipesState = this.store.selectSignal(Recipes.getRecipesState);\r\n  itemIds = this.store.selectSignal(Recipes.getAvailableItems);\r\n  data = this.store.selectSignal(Recipes.getAdjustedDataset);\r\n  maximizeType = this.store.selectSignal(Settings.getMaximizeType);\r\n  beltSpeed = this.store.selectSignal(Settings.getBeltSpeed);\r\n  dispRateInfo = this.store.selectSignal(Settings.getDisplayRateInfo);\r\n  rateUnitOptions = this.store.selectSignal(Settings.getObjectiveUnitOptions);\r\n  recipeIds = this.store.selectSignal(Settings.getAvailableRecipes);\r\n  paused = this.store.selectSignal(Preferences.getPaused);\r\n  objectives = computed(() => [...this._objectives()]);\r\n  messages = computed(() =>\r\n    this.getMessages(\r\n      this._objectives(),\r\n      this.result(),\r\n      this.itemsState(),\r\n      this.recipesState(),\r\n    ),\r\n  );\r\n\r\n  objectiveTypeOptions = objectiveTypeOptions;\r\n  displayRateOptions = displayRateOptions;\r\n\r\n  MaximizeType = MaximizeType;\r\n  ObjectiveUnit = ObjectiveUnit;\r\n  ObjectiveType = ObjectiveType;\r\n\r\n  getMessages(\r\n    objectives: Objective[],\r\n    matrixResult: MatrixResult,\r\n    itemsState: Items.ItemsState,\r\n    recipesState: Recipes.RecipesState,\r\n  ): Message[] {\r\n    if (matrixResult.resultType === SimplexResultType.Paused)\r\n      return [\r\n        {\r\n          severity: 'info',\r\n          detail: this.translateSvc.instant('objectives.pausedMessage'),\r\n        },\r\n      ];\r\n\r\n    if (matrixResult.resultType !== SimplexResultType.Failed) return [];\r\n\r\n    if (matrixResult.simplexStatus === 'unbounded') {\r\n      const maxObjectives = objectives.filter(\r\n        (o) => o.type === ObjectiveType.Maximize,\r\n      );\r\n\r\n      if (\r\n        maxObjectives.length &&\r\n        objectives.every((o) => o.type !== ObjectiveType.Limit)\r\n      ) {\r\n        // Found maximize objectives but no limits\r\n        return this.buildErrorMessages(\r\n          'objectives.errorUnbounded',\r\n          'objectives.errorNoLimits',\r\n          matrixResult,\r\n        );\r\n      }\r\n\r\n      if (\r\n        maxObjectives.some((o) =>\r\n          o.unit === ObjectiveUnit.Machines\r\n            ? recipesState[o.targetId].excluded\r\n            : itemsState[o.targetId].excluded,\r\n        )\r\n      ) {\r\n        // Found an excluded maximize objective\r\n        return this.buildErrorMessages(\r\n          'objectives.errorUnbounded',\r\n          'objectives.errorMaximizeExcluded',\r\n          matrixResult,\r\n        );\r\n      }\r\n\r\n      return this.buildErrorMessages(\r\n        'objectives.errorUnbounded',\r\n        'objectives.errorUnboundedDetail',\r\n        matrixResult,\r\n      );\r\n    } else if (matrixResult.simplexStatus === 'no_feasible') {\r\n      return this.buildErrorMessages(\r\n        'objectives.errorInfeasible',\r\n        'objectives.errorInfeasibleDetail',\r\n        matrixResult,\r\n      );\r\n    } else {\r\n      return this.buildErrorMessages(\r\n        'objectives.error',\r\n        'objectives.errorDetail',\r\n        matrixResult,\r\n      );\r\n    }\r\n  }\r\n\r\n  buildErrorMessages(\r\n    summary: string,\r\n    detail: string,\r\n    matrixResult: MatrixResult,\r\n  ): Message[] {\r\n    return [\r\n      {\r\n        severity: 'error',\r\n        summary: this.translateSvc.instant(summary),\r\n        detail: `${this.translateSvc.instant(\r\n          detail,\r\n        )} ${this.translateSvc.instant('objectives.errorSimplexInfo', {\r\n          returnCode: matrixResult.returnCode ?? 'unknown',\r\n          simplexStatus: matrixResult.simplexStatus ?? 'unknown',\r\n        })}`,\r\n      },\r\n    ];\r\n  }\r\n\r\n  setObjectiveOrder(objectives: Objective[]): void {\r\n    this.setOrder(objectives.map((o) => o.id));\r\n  }\r\n\r\n  changeUnit(\r\n    objective: Objective,\r\n    unit: ObjectiveUnit,\r\n    chooseItemPicker: PickerComponent,\r\n    chooseRecipePicker: PickerComponent,\r\n  ): void {\r\n    const data = this.data();\r\n    if (unit === ObjectiveUnit.Machines) {\r\n      if (objective.unit !== ObjectiveUnit.Machines) {\r\n        const recipeIds = data.itemRecipeIds[objective.targetId];\r\n        const updateFn = (recipeId: string): void =>\r\n          this.convertItemsToMachines(objective, recipeId, data);\r\n        if (recipeIds.length === 1) {\r\n          updateFn(recipeIds[0]);\r\n        } else {\r\n          chooseRecipePicker.selectId\r\n            .pipe(first())\r\n            .subscribe((targetId) => updateFn(targetId));\r\n          chooseRecipePicker.clickOpen('recipe', recipeIds);\r\n        }\r\n      }\r\n    } else {\r\n      if (objective.unit === ObjectiveUnit.Machines) {\r\n        const itemIds = Array.from(\r\n          data.adjustedRecipe[objective.targetId].produces,\r\n        );\r\n        const updateFn = (itemId: string): void =>\r\n          this.convertMachinesToItems(objective, itemId, unit, data);\r\n\r\n        if (itemIds.length === 1) {\r\n          updateFn(itemIds[0]);\r\n        } else {\r\n          chooseItemPicker.selectId\r\n            .pipe(first())\r\n            .subscribe((itemId) => updateFn(itemId));\r\n          chooseItemPicker.clickOpen('item', itemIds);\r\n        }\r\n      } else {\r\n        // No target conversion required\r\n        this.convertItemsToItems(objective, objective.targetId, unit, data);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update unit field (non-machines -> machines), then convert and update\r\n   * objective value so that number of items remains constant\r\n   */\r\n  convertItemsToMachines(\r\n    objective: Objective,\r\n    recipeId: string,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    this.setUnit(objective.id, {\r\n      targetId: recipeId,\r\n      unit: ObjectiveUnit.Machines,\r\n    });\r\n\r\n    if (objective.type === ObjectiveType.Maximize) return;\r\n\r\n    const itemsState = this.itemsState();\r\n    const beltSpeed = this.beltSpeed();\r\n    const dispRateInfo = this.dispRateInfo();\r\n    const oldValue = RateUtility.objectiveNormalizedRate(\r\n      objective,\r\n      itemsState,\r\n      beltSpeed,\r\n      dispRateInfo,\r\n      data,\r\n    );\r\n    const recipe = data.adjustedRecipe[recipeId];\r\n    const newValue = oldValue.div(recipe.output[objective.targetId]);\r\n    this.setValue(objective.id, newValue);\r\n  }\r\n\r\n  /**\r\n   * Update unit field (machines -> non-machines), then convert and update\r\n   * objective value so that number of items remains constant\r\n   */\r\n  convertMachinesToItems(\r\n    objective: Objective,\r\n    itemId: string,\r\n    unit: ObjectiveUnit,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    this.setUnit(objective.id, {\r\n      targetId: itemId,\r\n      unit,\r\n    });\r\n\r\n    if (objective.type === ObjectiveType.Maximize || objective.recipe == null)\r\n      return;\r\n\r\n    const itemsState = this.itemsState();\r\n    const beltSpeed = this.beltSpeed();\r\n    const dispRateInfo = this.dispRateInfo();\r\n    const factor = RateUtility.objectiveNormalizedRate(\r\n      {\r\n        id: '',\r\n        targetId: itemId,\r\n        value: rational(1n),\r\n        unit,\r\n        type: ObjectiveType.Output,\r\n      },\r\n      itemsState,\r\n      beltSpeed,\r\n      dispRateInfo,\r\n      data,\r\n    );\r\n    const oldValue = objective.value.mul(objective.recipe.output[itemId]);\r\n    const newValue = oldValue.div(factor);\r\n    this.setValue(objective.id, newValue);\r\n  }\r\n\r\n  /**\r\n   * Update unit field (non-machines -> non-machines), then convert and update\r\n   * objective value so that number of items remains constant\r\n   */\r\n  convertItemsToItems(\r\n    objective: Objective,\r\n    itemId: string,\r\n    unit: ObjectiveUnit,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    this.setUnit(objective.id, {\r\n      targetId: itemId,\r\n      unit,\r\n    });\r\n\r\n    if (objective.type === ObjectiveType.Maximize) return;\r\n\r\n    const itemsState = this.itemsState();\r\n    const beltSpeed = this.beltSpeed();\r\n    const dispRateInfo = this.dispRateInfo();\r\n    const oldValue = RateUtility.objectiveNormalizedRate(\r\n      objective,\r\n      itemsState,\r\n      beltSpeed,\r\n      dispRateInfo,\r\n      data,\r\n    );\r\n    const factor = RateUtility.objectiveNormalizedRate(\r\n      {\r\n        id: '',\r\n        targetId: itemId,\r\n        value: rational(1n),\r\n        unit,\r\n        type: ObjectiveType.Output,\r\n      },\r\n      itemsState,\r\n      beltSpeed,\r\n      dispRateInfo,\r\n      data,\r\n    );\r\n    const newValue = oldValue.div(factor);\r\n    this.setValue(objective.id, newValue);\r\n  }\r\n\r\n  addItemObjective(targetId: string): void {\r\n    this.addObjective({ targetId, unit: ObjectiveUnit.Items });\r\n  }\r\n\r\n  addRecipeObjective(targetId: string): void {\r\n    this.addObjective({ targetId, unit: ObjectiveUnit.Machines });\r\n  }\r\n\r\n  addRecipeLimit(targetId: string): void {\r\n    this.addObjective({\r\n      targetId,\r\n      unit: ObjectiveUnit.Machines,\r\n      type: ObjectiveType.Limit,\r\n    });\r\n  }\r\n\r\n  /** Action Dispatch Methods */\r\n  removeObjective(id: string): void {\r\n    this.store.dispatch(new Objectives.RemoveAction(id));\r\n  }\r\n\r\n  setOrder(ids: string[]): void {\r\n    this.store.dispatch(new Objectives.SetOrderAction(ids));\r\n  }\r\n\r\n  setTarget(id: string, value: string): void {\r\n    this.store.dispatch(new Objectives.SetTargetAction({ id, value }));\r\n  }\r\n\r\n  setValue(id: string, value: Rational): void {\r\n    this.store.dispatch(new Objectives.SetValueAction({ id, value }));\r\n  }\r\n\r\n  setUnit(id: string, value: ObjectiveBase): void {\r\n    this.store.dispatch(new Objectives.SetUnitAction({ id, value }));\r\n  }\r\n\r\n  setType(id: string, value: ObjectiveType): void {\r\n    this.store.dispatch(new Objectives.SetTypeAction({ id, value }));\r\n  }\r\n\r\n  addObjective(value: ObjectiveBase): void {\r\n    this.store.dispatch(new Objectives.AddAction(value));\r\n  }\r\n\r\n  setDisplayRate(value: DisplayRate, prev: DisplayRate): void {\r\n    this.store.dispatch(new Settings.SetDisplayRateAction({ value, prev }));\r\n  }\r\n\r\n  setPaused(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetPausedAction(value));\r\n  }\r\n}\r\n", "<p-card [header]=\"'objectives.title' | translate\">\r\n  <div class=\"objectives-content\">\r\n    <p-orderList\r\n      [value]=\"objectives()\"\r\n      [dragdrop]=\"true\"\r\n      [trackBy]=\"trackSvc.trackById\"\r\n      (onReorder)=\"setObjectiveOrder(objectives())\"\r\n    >\r\n      <ng-template pTemplate=\"item\" let-objective let-i=\"index\">\r\n        <div class=\"p-inputgroup\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-outlined border-end-0 cursor-grab\"\r\n            icon=\"fa-solid fa-grip-lines\"\r\n          ></button>\r\n          @if (objective.unit === ObjectiveUnit.Machines) {\r\n            <button\r\n              pButton\r\n              pRipple\r\n              labNoDrag\r\n              type=\"button\"\r\n              class=\"p-button-outlined lab-button-icon-only text-truncate\"\r\n              [pTooltip]=\"'objectives.selectARecipe' | translate\"\r\n              tooltipPosition=\"top\"\r\n              (click)=\"\r\n                editRecipePicker.clickOpen(\r\n                  'recipe',\r\n                  recipeIds(),\r\n                  objective.targetId\r\n                )\r\n              \"\r\n            >\r\n              <i\r\n                class=\"p-button-icon\"\r\n                [class]=\"objective.targetId | iconSmClass: 'recipe'\"\r\n                ><span>#{{ objective.id }}</span></i\r\n              >\r\n              @if (!contentSvc.isMobile()) {\r\n                <span class=\"p-button-label\">{{\r\n                  data().recipeEntities[objective.targetId].name\r\n                }}</span>\r\n              }\r\n            </button>\r\n            <lab-picker\r\n              #editRecipePicker\r\n              [header]=\"'objectives.selectARecipe' | translate\"\r\n              (selectId)=\"setTarget(objective.id, $event)\"\r\n            ></lab-picker>\r\n          } @else {\r\n            <button\r\n              labNoDrag\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined text-truncate\"\r\n              [icon]=\"objective.targetId | iconSmClass\"\r\n              [label]=\"\r\n                contentSvc.isMobile()\r\n                  ? ''\r\n                  : data().itemEntities[objective.targetId].name\r\n              \"\r\n              [pTooltip]=\"'objectives.selectAnItem' | translate\"\r\n              tooltipPosition=\"top\"\r\n              (click)=\"\r\n                editItemPicker.clickOpen('item', itemIds(), objective.targetId)\r\n              \"\r\n            ></button>\r\n            <lab-picker\r\n              #editItemPicker\r\n              [header]=\"'objectives.selectAnItem' | translate\"\r\n              (selectId)=\"setTarget(objective.id, $event)\"\r\n            ></lab-picker>\r\n          }\r\n          <lab-input-number\r\n            labNoDrag\r\n            [pTooltip]=\"\r\n              objective.type === ObjectiveType.Maximize\r\n                ? maximizeType() === MaximizeType.Weight\r\n                  ? ('objectives.valueWeightTooltip' | translate)\r\n                  : ('objectives.valueRatioTooltip' | translate)\r\n                : ('objectives.valueTooltip' | translate)\r\n            \"\r\n            tooltipPosition=\"top\"\r\n            [hideButtons]=\"contentSvc.isMobile()\"\r\n            [value]=\"objective.value\"\r\n            (setValue)=\"setValue(objective.id, $event)\"\r\n          ></lab-input-number>\r\n          @if (objective.type !== ObjectiveType.Maximize) {\r\n            <p-dropdown\r\n              labDropdownTranslate\r\n              labNoDrag\r\n              [tooltip]=\"'objectives.unitTooltip' | translate\"\r\n              tooltipPosition=\"top\"\r\n              [options]=\"rateUnitOptions()\"\r\n              [ngModel]=\"objective.unit\"\r\n              (onChange)=\"\r\n                changeUnit(\r\n                  objective,\r\n                  $event.value,\r\n                  chooseItemPicker,\r\n                  chooseRecipePicker\r\n                )\r\n              \"\r\n            ></p-dropdown>\r\n          }\r\n          <p-dropdown\r\n            labDropdownTranslate\r\n            labNoDrag\r\n            [tooltip]=\"'objectives.typeTooltip' | translate\"\r\n            tooltipPosition=\"top\"\r\n            [options]=\"objectiveTypeOptions\"\r\n            [ngModel]=\"objective.type\"\r\n            (onChange)=\"setType(objective.id, $event.value)\"\r\n          ></p-dropdown>\r\n          <button\r\n            pButton\r\n            pRipple\r\n            labNoDrag\r\n            type=\"button\"\r\n            class=\"p-button-outlined\"\r\n            icon=\"fa-solid fa-xmark\"\r\n            [pTooltip]=\"'objectives.removeTooltip' | translate\"\r\n            tooltipPosition=\"left\"\r\n            (click)=\"removeObjective(objective.id)\"\r\n          ></button>\r\n        </div>\r\n      </ng-template>\r\n    </p-orderList>\r\n    <div class=\"objectives-buttons d-flex flex-wrap mt-2\">\r\n      <button\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        class=\"flex-grow-1 p-button-outlined\"\r\n        icon=\"fa-solid fa-box\"\r\n        tooltipPosition=\"top\"\r\n        [label]=\"'objectives.addItems' | translate\"\r\n        (click)=\"addItemPicker.clickOpen('item', itemIds())\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        class=\"flex-grow-1 p-button-outlined\"\r\n        icon=\"fa-solid fa-industry\"\r\n        tooltipPosition=\"top\"\r\n        [label]=\"'objectives.addMachines' | translate\"\r\n        (click)=\"addRecipePicker.clickOpen('recipe', recipeIds())\"\r\n      ></button>\r\n      <p-dropdown\r\n        labDropdownTranslate\r\n        styleClass=\"h-100\"\r\n        [tooltip]=\"'objectives.selectDisplayRate' | translate\"\r\n        [ngModel]=\"dispRateInfo().option\"\r\n        [options]=\"displayRateOptions\"\r\n        (onChange)=\"setDisplayRate($event.value, dispRateInfo().option)\"\r\n      >\r\n      </p-dropdown>\r\n      <p-toggleButton\r\n        [ngModel]=\"paused()\"\r\n        [onIcon]=\"'fa-solid fa-play'\"\r\n        offIcon=\"fa-solid fa-pause\"\r\n        [pTooltip]=\"'objectives.pauseTooltip' | translate\"\r\n        (onChange)=\"setPaused($event.checked ?? false)\"\r\n      ></p-toggleButton>\r\n    </div>\r\n    @if (result().unboundedRecipeId; as recipeId) {\r\n      <p-messages severity=\"warn\" styleClass=\"mt-2\">\r\n        <ng-template pTemplate>\r\n          <div>\r\n            <div class=\"d-flex align-items-center\">\r\n              <span class=\"me-3\">{{\r\n                'objectives.errorSimplexUnboundedRecipe' | translate\r\n              }}</span>\r\n              <i\r\n                [class]=\"recipeId | iconSmClass: 'recipe'\"\r\n                [pTooltip]=\"tooltip\"\r\n              ></i>\r\n              <span class=\"ms-3\">{{\r\n                data().recipeEntities[recipeId].name\r\n              }}</span>\r\n              <ng-template #tooltip>\r\n                <lab-tooltip [id]=\"recipeId\" type=\"recipe\"></lab-tooltip>\r\n              </ng-template>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"mt-2 p-button-rounded\"\r\n              pButton\r\n              pRipple\r\n              icon=\"fa-solid fa-plus\"\r\n              [label]=\"\r\n                'objectives.errorSimplexUnboundedAddRecipeLimit' | translate\r\n              \"\r\n              (click)=\"addRecipeLimit(recipeId)\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n      </p-messages>\r\n    } @else if (messages().length) {\r\n      <p-messages\r\n        styleClass=\"mt-2\"\r\n        [value]=\"messages()\"\r\n        [closable]=\"false\"\r\n        [escape]=\"false\"\r\n      ></p-messages>\r\n    }\r\n  </div>\r\n  <lab-picker\r\n    #addItemPicker\r\n    [header]=\"'objectives.selectAnItem' | translate\"\r\n    (selectId)=\"addItemObjective($event)\"\r\n  ></lab-picker>\r\n  <lab-picker\r\n    #addRecipePicker\r\n    [header]=\"'objectives.selectARecipe' | translate\"\r\n    (selectId)=\"addRecipeObjective($event)\"\r\n  ></lab-picker>\r\n  <lab-picker\r\n    #chooseItemPicker\r\n    [header]=\"'objectives.selectAnItem' | translate\"\r\n  ></lab-picker>\r\n  <lab-picker\r\n    #chooseRecipePicker\r\n    [header]=\"'objectives.selectARecipe' | translate\"\r\n  ></lab-picker>\r\n</p-card>\r\n", "import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  computed,\r\n  ElementRef,\r\n  EventEmitter,\r\n  inject,\r\n  Output,\r\n  signal,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FilterService } from 'primeng/api';\r\n\r\nimport { Game } from '~/models';\r\nimport { ContentService } from '~/services';\r\nimport { LabState, Preferences, Recipes } from '~/store';\r\n\r\nexport type UnlockStatus = 'available' | 'locked' | 'researched';\r\n\r\n@Component({\r\n  selector: 'lab-tech-picker',\r\n  templateUrl: './tech-picker.component.html',\r\n  styleUrls: ['./tech-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TechPickerComponent {\r\n  ref = inject(ChangeDetectorRef);\r\n  filterSvc = inject(FilterService);\r\n  translateSvc = inject(TranslateService);\r\n  store = inject(Store<LabState>);\r\n  contentSvc = inject(ContentService);\r\n\r\n  filterInput = viewChild.required<ElementRef<HTMLInputElement>>('filterInput');\r\n\r\n  @Output() selectIds = new EventEmitter<string[] | null>();\r\n\r\n  data = this.store.selectSignal(Recipes.getAdjustedDataset);\r\n  showTechLabels = this.store.selectSignal(Preferences.getShowTechLabels);\r\n\r\n  filter = signal('');\r\n  selection = signal<string[]>([]);\r\n\r\n  allSelected = computed(\r\n    () => this.selection().length === this.data().technologyIds.length,\r\n  );\r\n  status = computed(() => {\r\n    const data = this.data();\r\n    const filter = this.filter();\r\n    let selection = this.selection();\r\n    const set = new Set(selection);\r\n    const available: string[] = [];\r\n    const locked: string[] = [];\r\n\r\n    let technologyIds = data.technologyIds;\r\n    if (filter) {\r\n      const technologies = technologyIds.map((i) => data.itemEntities[i]);\r\n      technologyIds = this.filterSvc\r\n        .filter(technologies, ['name'], filter, 'contains')\r\n        .map((t) => t.id);\r\n\r\n      selection = selection.filter((i) => technologyIds.includes(i));\r\n    }\r\n\r\n    const researched = selection;\r\n    for (const id of technologyIds) {\r\n      if (!set.has(id)) {\r\n        const tech = data.technologyEntities[id];\r\n\r\n        if (\r\n          tech.prerequisites == null ||\r\n          tech.prerequisites.every((p) => set.has(p))\r\n        ) {\r\n          available.push(id);\r\n        } else {\r\n          locked.push(id);\r\n        }\r\n      }\r\n    }\r\n\r\n    return { available, locked, researched };\r\n  });\r\n\r\n  visible = false;\r\n  importVisible = false;\r\n  importValue = '';\r\n\r\n  Game = Game;\r\n\r\n  clickOpen(selection: string[] | null): void {\r\n    selection = [...(selection ?? this.data().technologyIds)];\r\n    this.selection.set(selection);\r\n    this.visible = true;\r\n    this.ref.markForCheck();\r\n\r\n    if (!this.contentSvc.isMobile()) {\r\n      setTimeout(() => {\r\n        this.filterInput().nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  selectAll(value: boolean): void {\r\n    this.selection.set(value ? [...this.data().technologyIds] : []);\r\n  }\r\n\r\n  openImport(input: HTMLTextAreaElement): void {\r\n    this.importVisible = true;\r\n    setTimeout(() => input.focus());\r\n  }\r\n\r\n  copyScriptToClipboard(): void {\r\n    const script = `/c local list = {}\r\nfor _, tech in pairs(game.player.force.technologies) do\r\n    if tech.researched then\r\n        list[#list + 1] = tech.name\r\n    end\r\nend\r\ngame.write_file(\"techs.txt\", table.concat(list, \",\"))\r\n`;\r\n    window.navigator.clipboard.writeText(script);\r\n    this.contentSvc.showToast$.next({\r\n      severity: 'success',\r\n      detail: this.translateSvc.instant('techPicker.exportScriptCopied'),\r\n      contentStyleClass: 'detail-only',\r\n    });\r\n  }\r\n\r\n  importTechs(): void {\r\n    const selection = this.importValue\r\n      .split(',')\r\n      .map((v) => v.trim())\r\n      .map((id) => {\r\n        if (!id) return '';\r\n\r\n        const alt = `${id}-technology`;\r\n        if (this.data().technologyIds.includes(alt)) {\r\n          return alt;\r\n        } else if (this.data().technologyIds.includes(id)) {\r\n          return id;\r\n        }\r\n\r\n        return '';\r\n      })\r\n      .filter((v) => !!v);\r\n\r\n    const set = new Set(selection);\r\n    this.addPrerequisites(set);\r\n\r\n    this.selection.set(Array.from(set));\r\n    this.importValue = '';\r\n    this.importVisible = false;\r\n  }\r\n\r\n  clickId(id: string): void {\r\n    const set = new Set(this.selection());\r\n    if (set.has(id)) {\r\n      set.delete(id);\r\n\r\n      // Filter out any technologies whose prerequisites are no longer met\r\n      let removeIds: Set<string>;\r\n      do {\r\n        removeIds = new Set<string>();\r\n\r\n        for (const id of set) {\r\n          const tech = this.data().technologyEntities[id];\r\n          if (tech.prerequisites?.some((p) => !set.has(p))) removeIds.add(id);\r\n        }\r\n\r\n        removeIds.forEach((i) => set.delete(i));\r\n      } while (removeIds.size);\r\n    } else {\r\n      set.add(id);\r\n\r\n      this.addPrerequisites(set);\r\n    }\r\n\r\n    this.selection.set(Array.from(set));\r\n  }\r\n\r\n  // Add any technologies whose prerequisites were not previously met\r\n  addPrerequisites(set: Set<string>): void {\r\n    let addIds: Set<string>;\r\n    do {\r\n      addIds = new Set<string>();\r\n\r\n      for (const id of set) {\r\n        const tech = this.data().technologyEntities[id];\r\n        tech.prerequisites\r\n          ?.filter((p) => !set.has(p))\r\n          .forEach((p) => addIds.add(p));\r\n      }\r\n\r\n      addIds.forEach((i) => set.add(i));\r\n    } while (addIds.size);\r\n  }\r\n\r\n  onHide(): void {\r\n    const selection = this.selection();\r\n    const data = this.data();\r\n    if (selection.length === data.technologyIds.length)\r\n      this.selectIds.emit(null);\r\n\r\n    /**\r\n     * Filter for only technologies not listed as prerequisites for other\r\n     * researched technologies, to create minimal set\r\n     */\r\n    const filteredSelection = selection.filter(\r\n      (a) =>\r\n        !selection.some((b) => {\r\n          const techB = data.technologyEntities[b];\r\n          return techB.prerequisites && techB.prerequisites.indexOf(a) !== -1;\r\n        }),\r\n    );\r\n    this.selectIds.emit(filteredSelection);\r\n  }\r\n\r\n  /** Action Dispatch Methods */\r\n  setShowTechLabels(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetShowTechLabelsAction(value));\r\n  }\r\n}\r\n", "<p-dialog\r\n  styleClass=\"picker-dialog\"\r\n  [(visible)]=\"visible\"\r\n  [modal]=\"true\"\r\n  [dismissableMask]=\"true\"\r\n  [draggable]=\"false\"\r\n  [resizable]=\"false\"\r\n  appendTo=\"body\"\r\n  [header]=\"'techPicker.header' | translate\"\r\n  [style]=\"{\r\n    minHeight: '528px',\r\n    height: '80vh',\r\n    width: '50vw'\r\n  }\"\r\n  [breakpoints]=\"{ '768px': '80vw', '576px': '100vw' }\"\r\n  (onHide)=\"onHide()\"\r\n>\r\n  <div class=\"d-flex w-100 my-1 p-inputgroup\">\r\n    <span class=\"p-inputgroup-addon\">\r\n      <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n    </span>\r\n    <input\r\n      #filterInput\r\n      pInputText\r\n      type=\"text\"\r\n      class=\"w-100\"\r\n      [ngModel]=\"filter()\"\r\n      (input)=\"filter.set(filterInput.value)\"\r\n    />\r\n    <span class=\"p-inputgroup-addon flex-shrink-0\">\r\n      <p-checkbox\r\n        [binary]=\"true\"\r\n        [label]=\"'techPicker.unlockAll' | translate\"\r\n        labelStyleClass=\"text-nowrap\"\r\n        [ngModel]=\"allSelected()\"\r\n        (onChange)=\"selectAll($event.checked)\"\r\n      ></p-checkbox>\r\n    </span>\r\n    <span class=\"p-inputgroup-addon flex-shrink-0\">\r\n      <p-checkbox\r\n        [binary]=\"true\"\r\n        [label]=\"'techPicker.showLabels' | translate\"\r\n        labelStyleClass=\"text-nowrap\"\r\n        [ngModel]=\"showTechLabels()\"\r\n        (onChange)=\"setShowTechLabels($event.checked)\"\r\n      ></p-checkbox>\r\n    </span>\r\n    <button\r\n      pButton\r\n      pRipple\r\n      type=\"button\"\r\n      class=\"flex-shrink-0\"\r\n      icon=\"fa-solid fa-file-import\"\r\n      [label]=\"'techPicker.import' | translate\"\r\n      [pTooltip]=\"'techPicker.importTooltip' | translate\"\r\n      (click)=\"openImport(importInput)\"\r\n    ></button>\r\n    <p-dialog\r\n      [(visible)]=\"importVisible\"\r\n      [modal]=\"true\"\r\n      [dismissableMask]=\"true\"\r\n      [draggable]=\"true\"\r\n      [resizable]=\"false\"\r\n      appendTo=\"body\"\r\n      [style]=\"{\r\n        width: '30vw'\r\n      }\"\r\n      [breakpoints]=\"{ '768px': '50vw', '576px': '90vw' }\"\r\n      [header]=\"'techPicker.importHeader' | translate\"\r\n    >\r\n      <div class=\"d-flex flex-column\">\r\n        @if (data().game === Game.Factorio) {\r\n          <div class=\"p-inputgroup mb-3\">\r\n            <span class=\"p-inputgroup-addon\">{{\r\n              'techPicker.exportFromFactorio' | translate\r\n            }}</span>\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-copy\"\r\n              [label]=\"'techPicker.exportCopyScript' | translate\"\r\n              (click)=\"copyScriptToClipboard()\"\r\n            ></button>\r\n            <a\r\n              href=\"https://mods.factorio.com/mod/export-researched-technologies\"\r\n              target=\"_blank\"\r\n              pButton\r\n              pRipple\r\n              class=\"text-decoration-none p-inputgroup-addon p-button-outlined\"\r\n              [label]=\"'techPicker.exportUseMod' | translate\"\r\n              icon=\"fa-solid fa-link\"\r\n            >\r\n            </a>\r\n          </div>\r\n        }\r\n        <div>{{ 'techPicker.importInstructions' | translate }}</div>\r\n        <textarea\r\n          #importInput\r\n          class=\"mt-2 w-100\"\r\n          rows=\"10\"\r\n          pInputTextarea\r\n          [(ngModel)]=\"importValue\"\r\n          (keydown.enter)=\"importVisible = false\"\r\n        ></textarea>\r\n      </div>\r\n      <ng-template pTemplate=\"footer\">\r\n        <button\r\n          pButton\r\n          pRipple\r\n          type=\"button\"\r\n          class=\"p-button-text\"\r\n          icon=\"fa-solid fa-check\"\r\n          [label]=\"'ok' | translate\"\r\n          (click)=\"importTechs()\"\r\n        ></button>\r\n      </ng-template>\r\n    </p-dialog>\r\n  </div>\r\n\r\n  @if (visible) {\r\n    <p-scrollPanel\r\n      [style]=\"{ height: 'calc(80vh - 165px)', minHeight: '363px' }\"\r\n    >\r\n      <ng-container\r\n        *ngTemplateOutlet=\"\r\n          techSet;\r\n          context: {\r\n            title: 'techPicker.available',\r\n            ids: status().available,\r\n            class: 'p-button-text'\r\n          }\r\n        \"\r\n      ></ng-container>\r\n      <ng-container\r\n        *ngTemplateOutlet=\"\r\n          techSet;\r\n          context: {\r\n            title: 'techPicker.locked',\r\n            ids: status().locked,\r\n            class: 'p-button-danger'\r\n          }\r\n        \"\r\n      ></ng-container>\r\n      <ng-container\r\n        *ngTemplateOutlet=\"\r\n          techSet;\r\n          context: {\r\n            title: 'techPicker.researched',\r\n            ids: status().researched,\r\n            class: 'p-button-success'\r\n          }\r\n        \"\r\n      ></ng-container>\r\n      <ng-template #techSet let-title=\"title\" let-ids=\"ids\" let-class=\"class\">\r\n        <h3>{{ title | translate }}</h3>\r\n        <div class=\"d-flex flex-wrap invert\">\r\n          @if (ids.length === 0) {\r\n            <i>{{ 'none' | translate }}</i>\r\n          }\r\n          @for (id of ids; track id) {\r\n            <ng-container\r\n              *ngTemplateOutlet=\"techButton; context: { id, class }\"\r\n            ></ng-container>\r\n          }\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #techButton let-id=\"id\" let-class=\"class\"\r\n        ><button\r\n          pButton\r\n          pRipple\r\n          type=\"button\"\r\n          class=\"me-1 mb-1\"\r\n          [class]=\"class\"\r\n          [label]=\"(showTechLabels() && data().itemEntities[id]?.name) || ''\"\r\n          [class.hover-active]=\"selection().indexOf(id) === -1\"\r\n          [icon]=\"id | iconSmClass\"\r\n          [pTooltip]=\"tooltip\"\r\n          tooltipPosition=\"bottom\"\r\n          (click)=\"clickId(id)\"\r\n        >\r\n          <ng-template #tooltip>\r\n            <lab-tooltip [id]=\"id\" type=\"technology\"></lab-tooltip>\r\n          </ng-template>\r\n        </button>\r\n      </ng-template>\r\n    </p-scrollPanel>\r\n  }\r\n</p-dialog>\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n@Pipe({ name: 'filterOptions' })\r\nexport class FilterOptionsPipe implements PipeTransform {\r\n  transform(\r\n    value: SelectItem[] | null | undefined,\r\n    exclude: string[] | null | undefined,\r\n    self?: string | null,\r\n  ): SelectItem[] {\r\n    if (value == null) return [];\r\n    if (!exclude?.length) return value;\r\n\r\n    const excludeSet = new Set(exclude);\r\n    return value.filter((o) => !excludeSet.has(o.value) || o.value === self);\r\n  }\r\n}\r\n", "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  HostBinding,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { first } from 'rxjs';\r\n\r\nimport { coalesce } from '~/helpers';\r\nimport {\r\n  AdjustedDataset,\r\n  Defaults,\r\n  DisplayRate,\r\n  displayRateOptions,\r\n  Entities,\r\n  FlowDiagram,\r\n  flowDiagramOptions,\r\n  FuelType,\r\n  Game,\r\n  gameInfo,\r\n  gameOptions,\r\n  IdValueDefaultPayload,\r\n  IdValuePayload,\r\n  InserterCapacity,\r\n  inserterCapacityOptions,\r\n  InserterTarget,\r\n  inserterTargetOptions,\r\n  ItemId,\r\n  Language,\r\n  languageOptions,\r\n  LinkValue,\r\n  MachineSettings,\r\n  MaximizeType,\r\n  maximizeTypeOptions,\r\n  PowerUnit,\r\n  powerUnitOptions,\r\n  Preset,\r\n  rational,\r\n  Rational,\r\n  researchBonusOptions,\r\n  SankeyAlign,\r\n  sankeyAlignOptions,\r\n  Theme,\r\n  themeOptions,\r\n} from '~/models';\r\nimport { ContentService, RouterService } from '~/services';\r\nimport {\r\n  App,\r\n  Datasets,\r\n  Items,\r\n  LabState,\r\n  Machines,\r\n  Preferences,\r\n  Recipes,\r\n  Settings,\r\n} from '~/store';\r\nimport { BrowserUtility, RecipeUtility } from '~/utilities';\r\n\r\n@Component({\r\n  selector: 'lab-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  contentSvc = inject(ContentService);\r\n  router = inject(Router);\r\n  store = inject(Store<LabState>);\r\n  translateSvc = inject(TranslateService);\r\n  routerSvc = inject(RouterService);\r\n\r\n  @HostBinding('class.active') @Input() active = false;\r\n  @HostBinding('class.hidden') @Input() hidden = false;\r\n\r\n  itemsState = this.store.selectSignal(Items.getItemsState);\r\n  excludedItemIds = this.store.selectSignal(Items.getExcludedItemIds);\r\n  recipesState = this.store.selectSignal(Recipes.getRecipesState);\r\n  excludedRecipeIds = this.store.selectSignal(Recipes.getExcludedRecipeIds);\r\n  itemIds = this.store.selectSignal(Recipes.getAvailableItems);\r\n  data = this.store.selectSignal(Recipes.getAdjustedDataset);\r\n  machinesState = this.store.selectSignal(Machines.getMachinesState);\r\n  settings = this.store.selectSignal(Settings.getSettings);\r\n  columnsState = this.store.selectSignal(Settings.getColumnsState);\r\n  options = this.store.selectSignal(Settings.getOptions);\r\n  modOptions = this.store.selectSignal(Settings.getModOptions);\r\n  presetOptions = this.store.selectSignal(Settings.getPresetOptions);\r\n  linkValueOptions = this.store.selectSignal(Settings.getLinkValueOptions);\r\n  researchedTechnologyIds = this.store.selectSignal(\r\n    Settings.getAllResearchedTechnologyIds,\r\n  );\r\n  recipeIds = this.store.selectSignal(Settings.getAvailableRecipes);\r\n  gameStates = this.store.selectSignal(Settings.getGameStates);\r\n  savedStates = this.store.selectSignal(Settings.getSavedStates);\r\n  preferences = this.store.selectSignal(Preferences.preferencesState);\r\n  modRecord = this.store.selectSignal(Datasets.getModRecord);\r\n  machineIds = computed(() => [\r\n    ...this.store.selectSignal(Machines.getMachinesState)().ids,\r\n  ]);\r\n\r\n  state = '';\r\n  editValue = '';\r\n  editState: 'create' | 'edit' | null = null;\r\n  editStateMenu: MenuItem[] = [\r\n    {\r\n      label: this.translateSvc.instant('settings.createSavedState'),\r\n      icon: 'fa-solid fa-plus',\r\n      command: (): void => this.openCreateState(),\r\n    },\r\n    {\r\n      label: this.translateSvc.instant('settings.saveSavedState'),\r\n      icon: 'fa-solid fa-floppy-disk',\r\n      command: (): void => this.overwriteState(),\r\n    },\r\n    {\r\n      label: this.translateSvc.instant('settings.editSavedState'),\r\n      icon: 'fa-solid fa-pencil',\r\n      command: (): void => this.openEditState(),\r\n    },\r\n    {\r\n      label: this.translateSvc.instant('settings.deleteSavedState'),\r\n      icon: 'fa-solid fa-trash',\r\n      command: (): void => this.clickDeleteState(),\r\n    },\r\n  ];\r\n  versionsVisible = false;\r\n\r\n  displayRateOptions = displayRateOptions;\r\n  gameOptions = gameOptions;\r\n  inserterCapacityOptions = inserterCapacityOptions;\r\n  inserterTargetOptions = inserterTargetOptions;\r\n  languageOptions = languageOptions;\r\n  powerUnitOptions = powerUnitOptions;\r\n  researchSpeedOptions = researchBonusOptions;\r\n  themeOptions = themeOptions;\r\n  flowDiagramOptions = flowDiagramOptions;\r\n  sankeyAlignOptions = sankeyAlignOptions;\r\n  maximizeTypeOptions = maximizeTypeOptions;\r\n\r\n  FuelType = FuelType;\r\n  Game = Game;\r\n  ItemId = ItemId;\r\n  FlowDiagram = FlowDiagram;\r\n  BrowserUtility = BrowserUtility;\r\n  rational = rational;\r\n\r\n  ngOnInit(): void {\r\n    this.store\r\n      .select(Settings.getGameStates)\r\n      .pipe(first())\r\n      .subscribe((states) => {\r\n        this.state = coalesce(\r\n          Object.keys(states).find((s) => states[s] === BrowserUtility.search),\r\n          '',\r\n        );\r\n      });\r\n  }\r\n\r\n  clickResetSettings(): void {\r\n    this.contentSvc.confirm({\r\n      icon: 'fa-solid fa-exclamation-triangle',\r\n      header: this.translateSvc.instant('settings.reset'),\r\n      message: this.translateSvc.instant('settings.resetWarning'),\r\n      acceptLabel: this.translateSvc.instant('yes'),\r\n      rejectLabel: this.translateSvc.instant('cancel'),\r\n      accept: () => {\r\n        localStorage.clear();\r\n        this.resetSettings();\r\n      },\r\n    });\r\n  }\r\n\r\n  setSearch(search: string): void {\r\n    const tree = this.router.parseUrl(this.router.url);\r\n    const params = new URLSearchParams(search);\r\n    params.forEach((value, key) => (tree.queryParams[key] = value));\r\n    this.router.navigateByUrl(tree);\r\n  }\r\n\r\n  copySearchToClipboard(search: string): void {\r\n    navigator.clipboard.writeText(search);\r\n  }\r\n\r\n  setState(id: string, states: Entities<string>): void {\r\n    const query = states[id];\r\n    if (query) {\r\n      const queryParams = this.routerSvc.getParams(query);\r\n      this.state = id;\r\n      this.router.navigate([], { queryParams });\r\n    }\r\n  }\r\n\r\n  clickSaveState(game: Game): void {\r\n    if (!this.editValue || !this.editState) return;\r\n\r\n    this.saveState(game, this.editValue, BrowserUtility.search);\r\n\r\n    if (this.editState === 'edit' && this.state) {\r\n      this.removeState(game, this.state);\r\n    }\r\n\r\n    this.editState = null;\r\n    this.state = this.editValue;\r\n  }\r\n\r\n  openCreateState(): void {\r\n    this.editValue = '';\r\n    this.editState = 'create';\r\n  }\r\n\r\n  overwriteState(): void {\r\n    this.store\r\n      .select(Settings.getGame)\r\n      .pipe(first())\r\n      .subscribe((game) => {\r\n        this.saveState(game, this.state, BrowserUtility.search);\r\n      });\r\n  }\r\n\r\n  openEditState(): void {\r\n    this.editValue = this.state;\r\n    this.editState = 'edit';\r\n  }\r\n\r\n  clickDeleteState(): void {\r\n    this.store\r\n      .select(Settings.getGame)\r\n      .pipe(first())\r\n      .subscribe((game) => {\r\n        this.removeState(game, this.state);\r\n        this.state = '';\r\n      });\r\n  }\r\n\r\n  setGame(game: Game): void {\r\n    this.setMod(gameInfo[game].modId);\r\n  }\r\n\r\n  setExcludedRecipes(\r\n    checked: string[],\r\n    recipesState: Recipes.RecipesState,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    const payload: IdValueDefaultPayload<boolean>[] = [];\r\n    for (const id of data.recipeIds) {\r\n      const value = checked.some((i) => i === id);\r\n      if (value !== recipesState[id].excluded) {\r\n        // Needs to change, find default value\r\n        const def = coalesce(data.defaults?.excludedRecipeIds, []).some(\r\n          (i) => i === id,\r\n        );\r\n        payload.push({ id, value, def });\r\n      }\r\n    }\r\n    this.setRecipeExcludedBatch(payload);\r\n  }\r\n\r\n  setExcludedItems(\r\n    checked: string[],\r\n    itemsState: Items.ItemsState,\r\n    data: AdjustedDataset,\r\n  ): void {\r\n    const payload: IdValuePayload<boolean>[] = [];\r\n    for (const id of data.itemIds) {\r\n      const value = checked.some((i) => i === id);\r\n      if (value !== itemsState[id].excluded) {\r\n        payload.push({ id, value });\r\n      }\r\n    }\r\n    this.setItemExcludedBatch(payload);\r\n  }\r\n\r\n  changeFuel(\r\n    id: string,\r\n    value: string,\r\n    settings: MachineSettings,\r\n    fuelRankIds: string[],\r\n  ): void {\r\n    const def = RecipeUtility.bestMatch(\r\n      coalesce(\r\n        settings.fuelOptions?.map((o) => o.value),\r\n        [],\r\n      ),\r\n      fuelRankIds,\r\n    );\r\n    this.setFuel(id, value, def);\r\n  }\r\n\r\n  changeBeaconModuleRank(\r\n    id: string,\r\n    value: string[],\r\n    def: MachineSettings | Defaults,\r\n  ): void {\r\n    if (id === '') {\r\n      this.setBeaconModuleRank(id, value, [(def as Defaults).beaconModuleId]);\r\n    } else {\r\n      this.setBeaconModuleRank(\r\n        id,\r\n        value,\r\n        (def as MachineSettings).beaconModuleRankIds,\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleBeaconReceivers(value: boolean): void {\r\n    this.setBeaconReceivers(value ? rational(1n) : null);\r\n  }\r\n\r\n  /** Action Dispatch Methods */\r\n  resetSettings(): void {\r\n    this.store.dispatch(new App.ResetAction());\r\n  }\r\n\r\n  saveState(key: Game, id: string, value: string): void {\r\n    this.store.dispatch(new Preferences.SaveStateAction({ key, id, value }));\r\n  }\r\n\r\n  removeState(key: Game, id: string): void {\r\n    this.store.dispatch(new Preferences.RemoveStateAction({ key, id }));\r\n  }\r\n\r\n  setMod(value: string): void {\r\n    this.store.dispatch(new Settings.SetModAction(value));\r\n  }\r\n\r\n  setResearchedTechnologies(value: string[] | null): void {\r\n    this.store.dispatch(new Settings.SetResearchedTechnologiesAction(value));\r\n  }\r\n\r\n  setItemExcludedBatch(payload: IdValuePayload<boolean>[]): void {\r\n    this.store.dispatch(new Items.SetExcludedBatchAction(payload));\r\n  }\r\n\r\n  setRecipeExcludedBatch(payload: IdValueDefaultPayload<boolean>[]): void {\r\n    this.store.dispatch(new Recipes.SetExcludedBatchAction(payload));\r\n  }\r\n\r\n  setNetProductionOnly(value: boolean): void {\r\n    this.store.dispatch(new Settings.SetNetProductionOnlyAction(value));\r\n  }\r\n\r\n  setSurplusMachinesOutput(value: boolean): void {\r\n    this.store.dispatch(new Settings.SetSurplusMachinesOutputAction(value));\r\n  }\r\n\r\n  setPreset(value: Preset): void {\r\n    this.store.dispatch(new Settings.SetPresetAction(value));\r\n  }\r\n\r\n  addMachine(value: string, def: string[] | undefined): void {\r\n    this.store.dispatch(new Machines.AddAction({ value, def }));\r\n  }\r\n\r\n  removeMachine(value: string, def: string[] | undefined): void {\r\n    this.store.dispatch(new Machines.RemoveAction({ value, def }));\r\n  }\r\n\r\n  setMachineRank(value: string[], def: string[] | undefined): void {\r\n    this.store.dispatch(new Machines.SetRankAction({ value, def }));\r\n  }\r\n\r\n  setMachine(id: string, value: string, def: string[] | undefined): void {\r\n    this.store.dispatch(new Machines.SetMachineAction({ id, value, def }));\r\n  }\r\n\r\n  setFuel(id: string, value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Machines.SetFuelAction({ id, value, def }));\r\n  }\r\n\r\n  setModuleRank(id: string, value: string[], def: string[] | undefined): void {\r\n    this.store.dispatch(new Machines.SetModuleRankAction({ id, value, def }));\r\n  }\r\n\r\n  setOverclock(id: string, value: Rational, def: Rational | undefined): void {\r\n    this.store.dispatch(new Machines.SetOverclockAction({ id, value, def }));\r\n  }\r\n\r\n  setBeaconCount(id: string, value: Rational, def: Rational | undefined): void {\r\n    this.store.dispatch(new Machines.SetBeaconCountAction({ id, value, def }));\r\n  }\r\n\r\n  setBeacon(id: string, value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Machines.SetBeaconAction({ id, value, def }));\r\n  }\r\n\r\n  setBeaconModuleRank(\r\n    id: string,\r\n    value: string[],\r\n    def: string[] | undefined,\r\n  ): void {\r\n    this.store.dispatch(\r\n      new Machines.SetBeaconModuleRankAction({ id, value, def }),\r\n    );\r\n  }\r\n\r\n  setBeaconReceivers(value: Rational | null): void {\r\n    this.store.dispatch(new Settings.SetBeaconReceiversAction(value));\r\n  }\r\n\r\n  setProliferatorSpray(value: string): void {\r\n    this.store.dispatch(new Settings.SetProliferatorSprayAction(value));\r\n  }\r\n\r\n  setBelt(value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Settings.SetBeltAction({ value, def }));\r\n  }\r\n\r\n  setPipe(value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Settings.SetPipeAction({ value, def }));\r\n  }\r\n\r\n  setCargoWagon(value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Settings.SetCargoWagonAction({ value, def }));\r\n  }\r\n\r\n  setFluidWagon(value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Settings.SetFluidWagonAction({ value, def }));\r\n  }\r\n\r\n  setFuels(value: string[], def: string[] | undefined): void {\r\n    this.store.dispatch(new Settings.SetFuelRankAction({ value, def }));\r\n  }\r\n\r\n  setFlowRate(value: Rational): void {\r\n    this.store.dispatch(new Settings.SetFlowRateAction(value));\r\n  }\r\n\r\n  setInserterTarget(value: InserterTarget): void {\r\n    this.store.dispatch(new Settings.SetInserterTargetAction(value));\r\n  }\r\n\r\n  setMiningBonus(value: Rational): void {\r\n    this.store.dispatch(new Settings.SetMiningBonusAction(value));\r\n  }\r\n\r\n  setResearchSpeed(value: Rational): void {\r\n    this.store.dispatch(new Settings.SetResearchBonusAction(value));\r\n  }\r\n\r\n  setInserterCapacity(value: InserterCapacity): void {\r\n    this.store.dispatch(new Settings.SetInserterCapacityAction(value));\r\n  }\r\n\r\n  setDisplayRate(value: DisplayRate, prev: DisplayRate): void {\r\n    this.store.dispatch(new Settings.SetDisplayRateAction({ value, prev }));\r\n  }\r\n\r\n  setMaximizeType(value: MaximizeType): void {\r\n    this.store.dispatch(new Settings.SetMaximizeTypeAction(value));\r\n  }\r\n\r\n  setPowerUnit(value: PowerUnit): void {\r\n    this.store.dispatch(new Preferences.SetPowerUnitAction(value));\r\n  }\r\n\r\n  setLanguage(value: Language): void {\r\n    this.translateSvc.use(value);\r\n    this.store.dispatch(new Preferences.SetLanguageAction(value));\r\n  }\r\n\r\n  setTheme(value: Theme): void {\r\n    this.store.dispatch(new Preferences.SetThemeAction(value));\r\n  }\r\n\r\n  setBypassLanding(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetBypassLandingAction(value));\r\n  }\r\n\r\n  setHideDuplicateIcons(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetHideDuplicateIconsAction(value));\r\n  }\r\n\r\n  setDisablePaginator(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetDisablePaginatorAction(value));\r\n  }\r\n\r\n  setFlowDiagram(value: FlowDiagram): void {\r\n    this.store.dispatch(new Preferences.SetFlowDiagramAction(value));\r\n  }\r\n\r\n  setSankeyAlign(value: SankeyAlign): void {\r\n    this.store.dispatch(new Preferences.SetSankeyAlignAction(value));\r\n  }\r\n\r\n  setLinkSize(value: LinkValue): void {\r\n    this.store.dispatch(new Preferences.SetLinkSizeAction(value));\r\n  }\r\n\r\n  setLinkText(value: LinkValue): void {\r\n    this.store.dispatch(new Preferences.SetLinkTextAction(value));\r\n  }\r\n\r\n  setFlowHideExcluded(value: boolean): void {\r\n    this.store.dispatch(new Preferences.SetFlowHideExcludedAction(value));\r\n  }\r\n}\r\n", "<div class=\"p-3\">\r\n  <div class=\"d-flex align-items-center justify-content-between\">\r\n    <h2>{{ 'settings.header' | translate }}</h2>\r\n    <div>\r\n      <button\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        class=\"p-button-rounded p-button-text\"\r\n        icon=\"fa-solid fa-trash\"\r\n        [pTooltip]=\"'settings.reset' | translate\"\r\n        tooltipPosition=\"bottom\"\r\n        (click)=\"clickResetSettings()\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        class=\"p-button-rounded p-button-text d-inline-flex d-none d-xl-inline-flex\"\r\n        icon=\"fa-solid fa-xmark\"\r\n        (click)=\"contentSvc.toggleSettingsXl()\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        class=\"p-button-rounded p-button-text d-inline-flex d-sm-none\"\r\n        icon=\"fa-solid fa-xmark\"\r\n        (click)=\"contentSvc.toggleSettings()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"flex-grow-1 overflow-hidden\">\r\n  <p-scrollPanel [style]=\"{ height: '100%' }\">\r\n    <p-accordion [multiple]=\"true\">\r\n      <p-accordionTab [selected]=\"true\">\r\n        <ng-template pTemplate=\"header\">\r\n          <div\r\n            class=\"d-flex align-items-center justify-content-between flex-grow-1\"\r\n          >\r\n            <div>{{ 'settings.savedStates' | translate }}</div>\r\n            @if (state) {\r\n              <div>{{ state }}</div>\r\n            }\r\n          </div>\r\n        </ng-template>\r\n        @if (BrowserUtility.isStandalone) {\r\n          <div class=\"p-inputgroup mb-2\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-arrow-up-right-from-square\"\r\n              (click)=\"setSearch(search.value)\"\r\n            ></button>\r\n            <input\r\n              #search\r\n              pInputText\r\n              type=\"text\"\r\n              [ngModel]=\"BrowserUtility.search\"\r\n            />\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-copy\"\r\n              (click)=\"copySearchToClipboard(search.value)\"\r\n            ></button>\r\n          </div>\r\n        }\r\n        @if (editState) {\r\n          <div class=\"p-inputgroup mb-2\">\r\n            <input\r\n              #nameCtrl=\"ngModel\"\r\n              pInputText\r\n              pAutoFocus\r\n              [autofocus]=\"true\"\r\n              type=\"text\"\r\n              [placeholder]=\"'settings.nameSavedState' | translate\"\r\n              [pTooltip]=\"'settings.nameSavedState' | translate\"\r\n              tooltipPosition=\"top\"\r\n              required\r\n              [(ngModel)]=\"editValue\"\r\n              (keydown.enter)=\"clickSaveState(data().game)\"\r\n            />\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-floppy-disk\"\r\n              [pTooltip]=\"'settings.saveState' | translate\"\r\n              tooltipPosition=\"top\"\r\n              [disabled]=\"nameCtrl.invalid\"\r\n              (click)=\"clickSaveState(data().game)\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-outlined\"\r\n              icon=\"fa-solid fa-xmark\"\r\n              [pTooltip]=\"'cancel' | translate\"\r\n              (click)=\"editState = null\"\r\n            ></button>\r\n          </div>\r\n        } @else if (savedStates().length) {\r\n          <div class=\"p-inputgroup\">\r\n            <p-dropdown\r\n              [placeholder]=\"'settings.selectSavedState' | translate\"\r\n              [tooltip]=\"'settings.selectSavedState' | translate\"\r\n              tooltipPosition=\"top\"\r\n              [ngModel]=\"state\"\r\n              [options]=\"savedStates()\"\r\n              (onChange)=\"setState($event.value, gameStates())\"\r\n            ></p-dropdown>\r\n            @if (state) {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"p-button-outlined\"\r\n                icon=\"fa-solid fa-ellipsis-vertical\"\r\n                (click)=\"stateMenu.toggle($event)\"\r\n              >\r\n                <p-menu\r\n                  #stateMenu\r\n                  appendTo=\"body\"\r\n                  [popup]=\"true\"\r\n                  [model]=\"editStateMenu\"\r\n                >\r\n                </p-menu>\r\n              </button>\r\n            } @else {\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"p-button-outlined\"\r\n                icon=\"fa-solid fa-plus\"\r\n                [pTooltip]=\"'settings.createSavedState' | translate\"\r\n                (click)=\"openCreateState()\"\r\n              ></button>\r\n            }\r\n          </div>\r\n        } @else {\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            icon=\"fa-solid fa-plus\"\r\n            class=\"p-button-outlined p-button-rounded w-100\"\r\n            [label]=\"'settings.createSavedState' | translate\"\r\n            (click)=\"openCreateState()\"\r\n          ></button>\r\n        }\r\n      </p-accordionTab>\r\n      <p-accordionTab [selected]=\"true\">\r\n        <ng-template pTemplate=\"header\">\r\n          <div\r\n            class=\"d-flex align-items-center justify-content-between flex-grow-1\"\r\n          >\r\n            <div>{{ 'settings.game' | translate }}</div>\r\n            <div>{{ modRecord()[settings().modId]?.id }}</div>\r\n          </div>\r\n        </ng-template>\r\n        <div class=\"p-fluid\">\r\n          <div class=\"mt-3\" [class.pb-3]=\"data().game === Game.Factorio\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"game\"\r\n                [tooltip]=\"'settings.gameTooltip' | translate\"\r\n                [ngModel]=\"data().game\"\r\n                [options]=\"gameOptions\"\r\n                (onChange)=\"setGame($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"game\">{{ 'settings.game' | translate }}</label>\r\n              @if (data().game !== Game.Factorio) {\r\n                @for (mod of data().version | keyvalue; track mod.key) {\r\n                  <small class=\"position-absolute end-0 bottom-100 me-1 mb-1\">\r\n                    {{ mod.value }}\r\n                  </small>\r\n                }\r\n              }\r\n            </span>\r\n          </div>\r\n          @if (data().game === Game.Factorio) {\r\n            <div class=\"position-relative\">\r\n              <label class=\"p-static-label\">{{\r\n                'settings.modSet' | translate\r\n              }}</label>\r\n              <small class=\"position-absolute end-0 top-0 me-1 mb-1\">\r\n                <a\r\n                  href=\"https://github.com/factoriolab/factoriolab/issues/new?assignees=&labels=mod+support&template=mod-request.md&title=\"\r\n                  target=\"_blank\"\r\n                  >{{ 'settings.requestMod' | translate }}</a\r\n                >\r\n              </small>\r\n              <span class=\"p-inputgroup\">\r\n                <p-dropdown\r\n                  inputId=\"mod\"\r\n                  styleClass=\"w-100\"\r\n                  [filter]=\"true\"\r\n                  [autofocusFilter]=\"!contentSvc.isMobile()\"\r\n                  [tooltip]=\"'settings.modSetTooltip' | translate\"\r\n                  [ngModel]=\"settings().modId\"\r\n                  [options]=\"modOptions()\"\r\n                  (onChange)=\"setMod($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <button\r\n                  pButton\r\n                  pRipple\r\n                  icon=\"fa-solid fa-info\"\r\n                  class=\"p-button-outlined\"\r\n                  [pTooltip]=\"'settings.modVersions' | translate\"\r\n                  (click)=\"versionsVisible = true\"\r\n                >\r\n                  <p-dialog\r\n                    [(visible)]=\"versionsVisible\"\r\n                    appendTo=\"body\"\r\n                    [modal]=\"true\"\r\n                    [dismissableMask]=\"true\"\r\n                    [draggable]=\"false\"\r\n                    [resizable]=\"false\"\r\n                    [style]=\"{ width: '400px', maxHeight: '500px' }\"\r\n                    [breakpoints]=\"{ '400px': '100vw' }\"\r\n                    [header]=\"'settings.modVersions' | translate\"\r\n                  >\r\n                    <p-table\r\n                      responsiveLayout=\"scroll\"\r\n                      styleClass=\"p-datatable-sm\"\r\n                      [value]=\"data().version | keyvalue\"\r\n                    >\r\n                      <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                          <th>{{ 'settings.mod' | translate }}</th>\r\n                          <th>{{ 'settings.version' | translate }}</th>\r\n                        </tr>\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"body\" let-mod>\r\n                        <tr>\r\n                          <td>{{ mod.key }}</td>\r\n                          <td>{{ mod.value }}</td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-table>\r\n                    <ng-template pTemplate=\"footer\">\r\n                      <button\r\n                        pButton\r\n                        pRipple\r\n                        type=\"button\"\r\n                        class=\"p-button-outlined\"\r\n                        icon=\"fa-solid fa-check\"\r\n                        [label]=\"'ok' | translate\"\r\n                        (click)=\"versionsVisible = false\"\r\n                      ></button>\r\n                    </ng-template>\r\n                  </p-dialog>\r\n                </button>\r\n              </span>\r\n            </div>\r\n          }\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab [selected]=\"true\">\r\n        <ng-template pTemplate=\"header\">\r\n          <div\r\n            class=\"d-flex align-items-center justify-content-between flex-grow-1\"\r\n          >\r\n            <div>{{ 'settings.factory' | translate }}</div>\r\n            @if (presetDropdown.label(); as label) {\r\n              <div>{{ label | translate }}</div>\r\n            }\r\n          </div>\r\n        </ng-template>\r\n        <div class=\"p-fluid\">\r\n          <div class=\"pb-3\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-rounded p-button-outlined\"\r\n              icon=\"fa-solid fa-microchip\"\r\n              [pTooltip]=\"'settings.techsTooltip' | translate\"\r\n              [label]=\"\r\n                researchedTechnologyIds()\r\n                  ? ('settings.techsResearched'\r\n                    | translate\r\n                      : {\r\n                          count: researchedTechnologyIds()!.length\r\n                        })\r\n                  : ('settings.allTechsResearched' | translate)\r\n              \"\r\n              (click)=\"techPicker.clickOpen(researchedTechnologyIds())\"\r\n            ></button>\r\n            <lab-tech-picker\r\n              #techPicker\r\n              (selectIds)=\"setResearchedTechnologies($event)\"\r\n            ></lab-tech-picker>\r\n          </div>\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                #presetDropdown\r\n                labDropdownTranslate\r\n                inputId=\"preset\"\r\n                [tooltip]=\"'settings.presetTooltip' | translate\"\r\n                [ngModel]=\"settings().preset\"\r\n                [options]=\"presetOptions()\"\r\n                (onChange)=\"setPreset($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"preset\">{{ 'settings.preset' | translate }}</label>\r\n            </span>\r\n          </div>\r\n          @if (data().game !== Game.CaptainOfIndustry) {\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                machineRow;\r\n                context: {\r\n                  machineId: '',\r\n                  settings: machinesState().entities[''],\r\n                  defaults: data().defaults\r\n                }\r\n              \"\r\n            ></ng-container>\r\n            <p-orderList\r\n              [value]=\"machineIds()\"\r\n              [dragdrop]=\"true\"\r\n              (onReorder)=\"\r\n                setMachineRank(machineIds(), data().defaults?.machineRankIds)\r\n              \"\r\n            >\r\n              <ng-template pTemplate=\"item\" let-machineId>\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"\r\n                    machineRow;\r\n                    context: {\r\n                      machineId,\r\n                      settings: machinesState().entities[machineId],\r\n                      defaults: machinesState().entities['']\r\n                    }\r\n                  \"\r\n                ></ng-container>\r\n              </ng-template>\r\n            </p-orderList>\r\n            <ng-template\r\n              #machineRow\r\n              let-machineId=\"machineId\"\r\n              let-machineSettings=\"settings\"\r\n              let-defaults=\"defaults\"\r\n            >\r\n              @if (machineSettings) {\r\n                <div\r\n                  class=\"p-inputgroup flex-wrap machine-preference\"\r\n                  [class.mb-1]=\"machineId === ''\"\r\n                >\r\n                  <!-- Add/Remove machine button -->\r\n                  @if (machineId) {\r\n                    <button\r\n                      pButton\r\n                      pRipple\r\n                      type=\"button\"\r\n                      class=\"p-button-outlined cursor-grab\"\r\n                      [class.invisible]=\"machineId === ''\"\r\n                      icon=\"fa-solid fa-grip-lines\"\r\n                    ></button>\r\n                  } @else {\r\n                    <span\r\n                      class=\"p-inputgroup-addon\"\r\n                      [pTooltip]=\"'settings.machineDefaults' | translate\"\r\n                    >\r\n                      <i class=\"fa-solid fa-industry\"></i>\r\n                    </span>\r\n                  }\r\n                  <!-- Machine dropdown -->\r\n                  @if (machineId) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      labNoDrag\r\n                      [tooltip]=\"'settings.machineTooltip' | translate\"\r\n                      [ngModel]=\"machineId\"\r\n                      [options]=\"\r\n                        options().machines\r\n                          | filterOptions: machineIds() : machineId\r\n                      \"\r\n                      (onChange)=\"\r\n                        setMachine(\r\n                          machineId,\r\n                          $event.value,\r\n                          data().defaults?.machineRankIds\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        } @else {\r\n                          <div>{{ machineId }}</div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"machine\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  } @else {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      [ngModel]=\"options().machines[0]?.value\"\r\n                      [tooltip]=\"'settings.addMachineTooltip' | translate\"\r\n                      [options]=\"\r\n                        options().machines | filterOptions: machineIds()\r\n                      \"\r\n                      (onChange)=\"\r\n                        addMachine(\r\n                          $event.value,\r\n                          data().defaults?.machineRankIds\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center justify-content-center h-100\"\r\n                        >\r\n                          <i class=\"fa-solid fa-plus\"></i>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"machine\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                  <!-- Fuel dropdown -->\r\n                  @if (machineSettings.fuelId) {\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      labNoDrag\r\n                      [tooltip]=\"'settings.fuelTooltip' | translate\"\r\n                      [ngModel]=\"machineSettings.fuelId\"\r\n                      [options]=\"machineSettings.fuelOptions\"\r\n                      (onChange)=\"\r\n                        changeFuel(\r\n                          machineId,\r\n                          $event.value,\r\n                          machineSettings,\r\n                          settings().fuelRankIds\r\n                        )\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        <div class=\"d-flex\">\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"fuel\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  }\r\n                  <!-- Modifiers multiselect -->\r\n                  @if (machineSettings.moduleRankIds) {\r\n                    @if (\r\n                      data().game !== Game.Satisfactory &&\r\n                      data().game !== Game.FinalFactory\r\n                    ) {\r\n                      <p-multiSelect\r\n                        labNoDrag\r\n                        appendTo=\"body\"\r\n                        scrollHeight=\"40vh\"\r\n                        styleClass=\"icon\"\r\n                        panelStyleClass=\"tooltip\"\r\n                        placeholder=\"unused\"\r\n                        [selectionLimit]=\"2\"\r\n                        [tooltip]=\"'settings.modifierTooltip' | translate\"\r\n                        tooltipPosition=\"top\"\r\n                        [ngModel]=\"machineSettings.moduleRankIds\"\r\n                        [options]=\"machineSettings.moduleOptions ?? []\"\r\n                        (onChange)=\"\r\n                          setModuleRank(\r\n                            machineId,\r\n                            $event.value,\r\n                            defaults?.moduleRankIds\r\n                          )\r\n                        \"\r\n                      >\r\n                        <ng-template pTemplate=\"selectedItems\" let-items>\r\n                          <div class=\"d-flex\">\r\n                            @if (items?.length) {\r\n                              <i [class]=\"items[0] | iconSmClass\">\r\n                                @if (items.length > 1) {\r\n                                  <span>+{{ items.length - 1 }}</span>\r\n                                }\r\n                              </i>\r\n                            } @else {\r\n                              <i [class]=\"ItemId.Module | iconSmClass\"></i>\r\n                            }\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"item\" let-item>\r\n                          <div\r\n                            class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                            [pTooltip]=\"\r\n                              item.value !== 'module' ? tooltip : undefined\r\n                            \"\r\n                          >\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                            <div class=\"ms-3 text-truncate\">\r\n                              {{ item.label }}\r\n                            </div>\r\n                            <ng-template #tooltip>\r\n                              <lab-tooltip\r\n                                [id]=\"item.value\"\r\n                                type=\"module\"\r\n                              ></lab-tooltip>\r\n                            </ng-template>\r\n                          </div>\r\n                        </ng-template>\r\n                      </p-multiSelect>\r\n                    } @else {\r\n                      @if (data().game === Game.FinalFactory) {\r\n                        <p-inputNumber\r\n                          #duplicatorsInput\r\n                          labNoDrag\r\n                          [min]=\"0\"\r\n                          [step]=\"1\"\r\n                          [maxFractionDigits]=\"0\"\r\n                          [showButtons]=\"true\"\r\n                          incrementButtonClass=\"p-button-outlined\"\r\n                          decrementButtonClass=\"p-button-outlined\"\r\n                          inputStyleClass=\"text-end\"\r\n                          [pTooltip]=\"\r\n                            'settings.modifierCountTooltip' | translate\r\n                          \"\r\n                          [ngModel]=\"machineSettings.overclock.toNumber()\"\r\n                          (onBlur)=\"\r\n                            setOverclock(\r\n                              machineId,\r\n                              rational(duplicatorsInput.value ?? 0),\r\n                              machineId\r\n                                ? machinesState().entities[''].overclock\r\n                                : rational(0)\r\n                            )\r\n                          \"\r\n                        >\r\n                        </p-inputNumber>\r\n                      }\r\n                      <p-dropdown\r\n                        labDropdownBase=\"icon\"\r\n                        labNoDrag\r\n                        [tooltip]=\"'settings.modifierTooltip' | translate\"\r\n                        [ngModel]=\"machineSettings.moduleRankIds?.[0]\"\r\n                        [options]=\"machineSettings.moduleOptions ?? []\"\r\n                        (onChange)=\"\r\n                          setModuleRank(\r\n                            machineId,\r\n                            [$event.value],\r\n                            data().defaults?.moduleRankIds\r\n                          )\r\n                        \"\r\n                      >\r\n                        <ng-template pTemplate=\"selectedItem\" let-item>\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"item\" let-item>\r\n                          <div\r\n                            class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                            [pTooltip]=\"\r\n                              item.value !== 'module' ? tooltip : undefined\r\n                            \"\r\n                          >\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                            <div class=\"ms-3 text-truncate\">\r\n                              {{ item.label }}\r\n                            </div>\r\n                            <ng-template #tooltip>\r\n                              <lab-tooltip\r\n                                [id]=\"item.value\"\r\n                                type=\"module\"\r\n                              ></lab-tooltip>\r\n                            </ng-template>\r\n                          </div>\r\n                        </ng-template>\r\n                      </p-dropdown>\r\n                    }\r\n                  }\r\n                  <!-- Overclock input -->\r\n                  @if (data().game === Game.Satisfactory) {\r\n                    <p-inputNumber\r\n                      #overclockInput\r\n                      labNoDrag\r\n                      suffix=\"%\"\r\n                      [min]=\"1\"\r\n                      [max]=\"250\"\r\n                      [step]=\"10\"\r\n                      [maxFractionDigits]=\"2\"\r\n                      [showButtons]=\"true\"\r\n                      incrementButtonClass=\"p-button-outlined\"\r\n                      decrementButtonClass=\"p-button-outlined\"\r\n                      inputStyleClass=\"text-end\"\r\n                      [pTooltip]=\"'settings.overclockTooltip' | translate\"\r\n                      [ngModel]=\"machineSettings.overclock.toNumber()\"\r\n                      (onBlur)=\"\r\n                        setOverclock(\r\n                          machineId,\r\n                          rational(overclockInput.value ?? 100),\r\n                          machineId\r\n                            ? machinesState().entities[''].overclock\r\n                            : rational(100)\r\n                        )\r\n                      \"\r\n                    >\r\n                    </p-inputNumber>\r\n                  }\r\n                  @if (\r\n                    data().game === Game.Factorio &&\r\n                    machineSettings.beaconCount != null\r\n                  ) {\r\n                    <!-- Beacon count input -->\r\n                    <lab-input-number\r\n                      labNoDrag\r\n                      [pTooltip]=\"'settings.beaconCountTooltip' | translate\"\r\n                      tooltipPosition=\"top\"\r\n                      [value]=\"machineSettings.beaconCount\"\r\n                      (setValue)=\"\r\n                        setBeaconCount(machineId, $event, defaults?.beaconCount)\r\n                      \"\r\n                    ></lab-input-number>\r\n                    <!-- Beacon dropdown -->\r\n                    <p-dropdown\r\n                      labDropdownBase=\"icon\"\r\n                      labNoDrag\r\n                      [tooltip]=\"'settings.beaconTooltip' | translate\"\r\n                      tooltipPosition=\"top\"\r\n                      [ngModel]=\"machineSettings.beaconId\"\r\n                      [options]=\"options().beacons\"\r\n                      (onChange)=\"\r\n                        setBeacon(machineId, $event.value, defaults?.beaconId)\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        @if (item) {\r\n                          <div class=\"d-flex\">\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                          </div>\r\n                        }\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"tooltip\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                          <ng-template #tooltip>\r\n                            <lab-tooltip\r\n                              [id]=\"item.value\"\r\n                              type=\"beacon\"\r\n                            ></lab-tooltip>\r\n                          </ng-template>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                    <!-- Beacon module dropdown -->\r\n                    @if (machineSettings.beaconModuleRankIds) {\r\n                      <p-multiSelect\r\n                        labNoDrag\r\n                        appendTo=\"body\"\r\n                        scrollHeight=\"40vh\"\r\n                        styleClass=\"icon\"\r\n                        panelStyleClass=\"tooltip\"\r\n                        placeholder=\"unused\"\r\n                        [selectionLimit]=\"2\"\r\n                        [tooltip]=\"'settings.beaconModuleTooltip' | translate\"\r\n                        tooltipPosition=\"top\"\r\n                        [ngModel]=\"machineSettings.beaconModuleRankIds\"\r\n                        [options]=\"machineSettings.beaconModuleOptions ?? []\"\r\n                        (onChange)=\"\r\n                          changeBeaconModuleRank(\r\n                            machineId,\r\n                            $event.value,\r\n                            defaults\r\n                          )\r\n                        \"\r\n                      >\r\n                        <ng-template pTemplate=\"selectedItems\" let-items>\r\n                          <div class=\"d-flex\">\r\n                            @if (items?.length) {\r\n                              <i [class]=\"items[0] | iconSmClass\">\r\n                                @if (items.length > 1) {\r\n                                  <span>+{{ items.length - 1 }}</span>\r\n                                }\r\n                              </i>\r\n                            } @else {\r\n                              <i [class]=\"ItemId.Module | iconSmClass\"></i>\r\n                            }\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"item\" let-item>\r\n                          <div\r\n                            class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                            [pTooltip]=\"\r\n                              item.value !== 'module' ? tooltip : undefined\r\n                            \"\r\n                          >\r\n                            <i [class]=\"item.value | iconSmClass\"></i>\r\n                            <div class=\"ms-3 text-truncate\">\r\n                              {{ item.label }}\r\n                            </div>\r\n                            <ng-template #tooltip>\r\n                              <lab-tooltip\r\n                                [id]=\"item.value\"\r\n                                type=\"module\"\r\n                              ></lab-tooltip>\r\n                            </ng-template>\r\n                          </div>\r\n                        </ng-template>\r\n                      </p-multiSelect>\r\n                    }\r\n                  }\r\n                  <button\r\n                    pButton\r\n                    pRipple\r\n                    labNoDrag\r\n                    type=\"button\"\r\n                    icon=\"fa-solid fa-xmark\"\r\n                    class=\"p-button-outlined ms-auto\"\r\n                    [class.invisible]=\"machineId === ''\"\r\n                    [pTooltip]=\"'settings.removeMachinePreference' | translate\"\r\n                    (click)=\"\r\n                      removeMachine(machineId, data().defaults?.machineRankIds)\r\n                    \"\r\n                  ></button>\r\n                </div>\r\n              }\r\n            </ng-template>\r\n            <div class=\"pt-3\"><!--spacer--></div>\r\n          }\r\n          @if (data().game === Game.Factorio) {\r\n            <div class=\"pb-3\">\r\n              <p-checkbox\r\n                [ngModel]=\"settings().beaconReceivers != null\"\r\n                [binary]=\"true\"\r\n                [label]=\"'settings.estimateBeaconPowerUsage' | translate\"\r\n                [pTooltip]=\"\r\n                  'settings.estimateBeaconPowerUsageTooltip' | translate\r\n                \"\r\n                (onChange)=\"toggleBeaconReceivers($event.checked)\"\r\n              ></p-checkbox>\r\n            </div>\r\n          }\r\n          @if (settings().beaconReceivers; as beaconReceivers) {\r\n            <div class=\"pb-3\">\r\n              <label class=\"p-static-label\" for=\"beacon-receivers\">{{\r\n                'settings.averageBeaconReceivers' | translate\r\n              }}</label>\r\n              <lab-input-number\r\n                inputId=\"beacon-receivers\"\r\n                class=\"w-100\"\r\n                [pTooltip]=\"\r\n                  'settings.averageBeaconReceiversTooltip' | translate\r\n                \"\r\n                [value]=\"beaconReceivers\"\r\n                (setValue)=\"setBeaconReceivers($event)\"\r\n              ></lab-input-number>\r\n            </div>\r\n          }\r\n          @if (data().game === Game.DysonSphereProgram) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownBase\r\n                  inputId=\"proliferator-self-spray\"\r\n                  [autoDisplayFirst]=\"false\"\r\n                  [tooltip]=\"\r\n                    'settings.proliferatorSelfSprayTooltip' | translate\r\n                  \"\r\n                  [ngModel]=\"settings().proliferatorSprayId\"\r\n                  [options]=\"options().proliferatorModules\"\r\n                  (onChange)=\"setProliferatorSpray($event.value)\"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex align-items-center h-100\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"item.value !== 'module' ? tooltip : undefined\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"item.value\"\r\n                          type=\"module\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <label for=\"proliferator-self-spray\">{{\r\n                  'settings.proliferatorSelfSpray' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          <div class=\"mt-3 pb-3\">\r\n            <div class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownBase\r\n                inputId=\"default-transport-belt\"\r\n                [tooltip]=\"'settings.defaultTransportBeltTooltip' | translate\"\r\n                [ngModel]=\"settings().beltId\"\r\n                [options]=\"options().belts\"\r\n                (onChange)=\"setBelt($event.value, data().defaults?.beltId)\"\r\n              >\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  @if (item) {\r\n                    <div class=\"d-flex align-items-center h-100\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </ng-template>\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  <div\r\n                    class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                    [pTooltip]=\"tooltip\"\r\n                  >\r\n                    <i [class]=\"item.value | iconSmClass\"></i>\r\n                    <div class=\"ms-3 text-truncate\">\r\n                      {{ item.label }}\r\n                    </div>\r\n                    <ng-template #tooltip>\r\n                      <lab-tooltip [id]=\"item.value\" type=\"belt\"></lab-tooltip>\r\n                    </ng-template>\r\n                  </div>\r\n                </ng-template>\r\n              </p-dropdown>\r\n              <label for=\"default-transport-belt\">{{\r\n                'settings.defaultTransportBelt' | translate\r\n              }}</label>\r\n            </div>\r\n          </div>\r\n          @if (data().pipeIds.length > 1) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownBase\r\n                  inputId=\"default-pipe\"\r\n                  [tooltip]=\"'settings.defaultPipeTooltip' | translate\"\r\n                  [ngModel]=\"settings().pipeId\"\r\n                  [options]=\"options().pipes\"\r\n                  (onChange)=\"setPipe($event.value, data().defaults?.pipeId)\"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex align-items-center h-100\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"tooltip\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"item.value\"\r\n                          type=\"pipe\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <label for=\"default-pipe\">{{\r\n                  'settings.defaultPipe' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          @if (data().cargoWagonIds.length > 1) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownBase\r\n                  inputId=\"default-cargo-wagon\"\r\n                  [tooltip]=\"'settings.defaultCargoWagonTooltip' | translate\"\r\n                  [ngModel]=\"settings().cargoWagonId\"\r\n                  [options]=\"options().cargoWagons\"\r\n                  (onChange)=\"\r\n                    setCargoWagon($event.value, data().defaults?.cargoWagonId)\r\n                  \"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex align-items-center h-100\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"tooltip\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"item.value\"\r\n                          type=\"cargo-wagon\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <label for=\"default-cargo-wagon\">{{\r\n                  'settings.defaultCargoWagon' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          @if (data().fluidWagonIds.length > 1) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownBase\r\n                  inputId=\"default-fluid-wagon\"\r\n                  [tooltip]=\"'settings.defaultFluidWagonTooltip' | translate\"\r\n                  [ngModel]=\"settings().fluidWagonId\"\r\n                  [options]=\"options().fluidWagons\"\r\n                  (onChange)=\"\r\n                    setFluidWagon($event.value, data().defaults?.fluidWagonId)\r\n                  \"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex align-items-center h-100\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"tooltip\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                      <ng-template #tooltip>\r\n                        <lab-tooltip\r\n                          [id]=\"item.value\"\r\n                          type=\"fluid-wagon\"\r\n                        ></lab-tooltip>\r\n                      </ng-template>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <label for=\"default-fluid-wagon\">{{\r\n                  'settings.defaultFluidWagon' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          @if (data().fuelIds.length && data().game !== Game.Satisfactory) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                @if (data(); as data) {\r\n                  <p-multiSelect\r\n                    appendTo=\"body\"\r\n                    scrollHeight=\"40vh\"\r\n                    [tooltip]=\"'settings.fuelRankTooltip' | translate\"\r\n                    [ngModel]=\"settings().fuelRankIds\"\r\n                    [options]=\"options().fuels\"\r\n                    (onChange)=\"\r\n                      setFuels(\r\n                        $event.value,\r\n                        data.defaults && data.defaults.fuelId\r\n                          ? [data.defaults.fuelId]\r\n                          : []\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItems\" let-items>\r\n                      <div class=\"d-flex\">\r\n                        @if (!items?.length) {\r\n                          <i [class]=\"ItemId.Module | iconSmClass\"></i>\r\n                        } @else {\r\n                          @for (item of items; track item) {\r\n                            <i class=\"mx-2\" [class]=\"item | iconSmClass\"></i>\r\n                          }\r\n                        }\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"tooltip\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                        <ng-template #tooltip>\r\n                          <lab-tooltip\r\n                            [id]=\"item.value\"\r\n                            type=\"fuel\"\r\n                          ></lab-tooltip>\r\n                        </ng-template>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-multiSelect>\r\n                }\r\n                <label for=\"fuel-rank\">{{\r\n                  'settings.fuelRank' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          @if (data().game === Game.Factorio) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-inputNumber\r\n                  #flowRateInput\r\n                  inputId=\"pipe-flow-rate\"\r\n                  [suffix]=\"' ' + ('settings.flowRateUnit' | translate)\"\r\n                  [min]=\"1\"\r\n                  [step]=\"100\"\r\n                  [showButtons]=\"true\"\r\n                  incrementButtonClass=\"p-button-outlined\"\r\n                  decrementButtonClass=\"p-button-outlined\"\r\n                  [pTooltip]=\"'settings.pipeFlowRateTooltip' | translate\"\r\n                  [ngModel]=\"settings().flowRate.toNumber()\"\r\n                  (onBlur)=\"setFlowRate(rational(flowRateInput.value ?? 1500))\"\r\n                ></p-inputNumber>\r\n                <label for=\"pipe-flow-rate\">{{\r\n                  'settings.pipeFlowRate' | translate\r\n                }}</label>\r\n                <small class=\"position-absolute end-0 bottom-100 me-1 mb-1\">\r\n                  <a\r\n                    href=\"https://wiki.factorio.com/Fluid_system#Pipelines\"\r\n                    target=\"_blank\"\r\n                    >{{ 'settings.wiki' | translate }}</a\r\n                  >\r\n                </small>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownTranslate\r\n                  inputId=\"inserter-target\"\r\n                  [tooltip]=\"'settings.inserterTargetTooltip' | translate\"\r\n                  [ngModel]=\"settings().inserterTarget\"\r\n                  [options]=\"inserterTargetOptions\"\r\n                  (onChange)=\"setInserterTarget($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <label for=\"inserter-target\">{{\r\n                  'settings.inserterTarget' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          @if (data().game === Game.DysonSphereProgram) {\r\n            <div class=\"mt-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-inputNumber\r\n                  #miningBonusInput\r\n                  inputId=\"mining-speed\"\r\n                  suffix=\"%\"\r\n                  [min]=\"100\"\r\n                  [step]=\"10\"\r\n                  [showButtons]=\"true\"\r\n                  incrementButtonClass=\"p-button-outlined\"\r\n                  decrementButtonClass=\"p-button-outlined\"\r\n                  [pTooltip]=\"'settings.miningSpeedTooltip' | translate\"\r\n                  [ngModel]=\"\r\n                    settings().miningBonus.add(rational(100)).toNumber()\r\n                  \"\r\n                  (onBlur)=\"\r\n                    setMiningBonus(\r\n                      rational((miningBonusInput.value ?? 100) - 100)\r\n                    )\r\n                  \"\r\n                ></p-inputNumber>\r\n                <label for=\"mining-speed\">{{\r\n                  'settings.miningSpeed' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab>\r\n        <ng-template pTemplate=\"header\">\r\n          <div\r\n            class=\"d-flex align-items-center justify-content-between flex-grow-1\"\r\n          >\r\n            <div>{{ 'settings.flow' | translate }}</div>\r\n            @if (flowDiagramDropdown.label(); as label) {\r\n              <div>{{ label | translate }}</div>\r\n            }\r\n          </div>\r\n        </ng-template>\r\n        <div class=\"p-fluid\">\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                #flowDiagramDropdown\r\n                labDropdownTranslate\r\n                inputId=\"flow-diagram\"\r\n                [tooltip]=\"'settings.flowDiagramTooltip' | translate\"\r\n                [ngModel]=\"preferences().flowDiagram\"\r\n                [options]=\"flowDiagramOptions\"\r\n                (onChange)=\"setFlowDiagram($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"flow-diagram\">{{\r\n                'settings.flowDiagram' | translate\r\n              }}</label>\r\n            </span>\r\n          </div>\r\n          @if (preferences().flowDiagram === FlowDiagram.Sankey) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <span class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownTranslate\r\n                  inputId=\"sankey-align\"\r\n                  [tooltip]=\"'settings.sankeyAlignTooltip' | translate\"\r\n                  [ngModel]=\"preferences().sankeyAlign\"\r\n                  [options]=\"sankeyAlignOptions\"\r\n                  (onChange)=\"setSankeyAlign($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <label for=\"sankey-align\">{{\r\n                  'settings.sankeyAlign' | translate\r\n                }}</label>\r\n              </span>\r\n            </div>\r\n          }\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"link-size\"\r\n                [tooltip]=\"'settings.linkSizeTooltip' | translate\"\r\n                [ngModel]=\"preferences().linkSize\"\r\n                [options]=\"linkValueOptions()\"\r\n                (onChange)=\"setLinkSize($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"link-size\">{{\r\n                'settings.linkSize' | translate\r\n              }}</label>\r\n            </span>\r\n          </div>\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"link-text\"\r\n                [tooltip]=\"'settings.linkTextTooltip' | translate\"\r\n                [ngModel]=\"preferences().linkText\"\r\n                [options]=\"linkValueOptions()\"\r\n                (onChange)=\"setLinkText($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"link-text\">{{\r\n                'settings.linkText' | translate\r\n              }}</label>\r\n            </span>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <p-checkbox\r\n              [ngModel]=\"preferences().flowHideExcluded\"\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.flowHideExcluded' | translate\"\r\n              [pTooltip]=\"'settings.flowHideExcludedTooltip' | translate\"\r\n              (onChange)=\"setFlowHideExcluded($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n        </div>\r\n      </p-accordionTab>\r\n      @if (data().game === Game.Factorio) {\r\n        <p-accordionTab [header]=\"'settings.bonuses' | translate\">\r\n          <div class=\"p-fluid\">\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-inputNumber\r\n                  #miningProdInput\r\n                  inputId=\"mining-productivity\"\r\n                  prefix=\"+\"\r\n                  suffix=\"%\"\r\n                  [min]=\"0\"\r\n                  [step]=\"10\"\r\n                  [showButtons]=\"true\"\r\n                  incrementButtonClass=\"p-button-outlined\"\r\n                  decrementButtonClass=\"p-button-outlined\"\r\n                  [pTooltip]=\"'settings.miningProductivityTooltip' | translate\"\r\n                  [ngModel]=\"settings().miningBonus.toNumber()\"\r\n                  (onBlur)=\"\r\n                    setMiningBonus(rational(miningProdInput.value ?? 0))\r\n                  \"\r\n                ></p-inputNumber>\r\n                <label for=\"mining-productivity\">{{\r\n                  'settings.miningProductivity' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-3 pb-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownTranslate\r\n                  inputId=\"research-bonus\"\r\n                  [pTooltip]=\"'settings.researchSpeedTooltip' | translate\"\r\n                  [ngModel]=\"settings().researchBonus\"\r\n                  [options]=\"researchSpeedOptions\"\r\n                  (onChange)=\"setResearchSpeed($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <label for=\"research-speed\">{{\r\n                  'settings.researchSpeed' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <div class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownTranslate\r\n                  inputId=\"inserter-capacity\"\r\n                  [tooltip]=\"'settings.inserterCapacityTooltip' | translate\"\r\n                  [ngModel]=\"settings().inserterCapacity\"\r\n                  [options]=\"inserterCapacityOptions\"\r\n                  (onChange)=\"setInserterCapacity($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <label for=\"inserter-capacity\">{{\r\n                  'settings.inserterCapacity' | translate\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </p-accordionTab>\r\n      }\r\n      <p-accordionTab [header]=\"'settings.display' | translate\">\r\n        <div class=\"p-fluid\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-rounded p-button-outlined mb-2\"\r\n            icon=\"fa-solid fa-table-columns\"\r\n            [label]=\"'settings.openColumnSettings' | translate\"\r\n            (click)=\"contentSvc.showColumns$.next()\"\r\n          ></button>\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"display-rate\"\r\n                [tooltip]=\"'settings.displayRateTooltip' | translate\"\r\n                [ngModel]=\"settings().displayRate\"\r\n                [options]=\"displayRateOptions\"\r\n                (onChange)=\"\r\n                  setDisplayRate($event.value, settings().displayRate)\r\n                \"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"display-rate\">{{\r\n                'settings.displayRate' | translate\r\n              }}</label>\r\n            </span>\r\n          </div>\r\n          @if (columnsState().power.show) {\r\n            <div class=\"mt-3 pb-3\">\r\n              <span class=\"p-float-label\">\r\n                <p-dropdown\r\n                  labDropdownTranslate\r\n                  inputId=\"power-unit\"\r\n                  [tooltip]=\"'settings.powerUnitTooltip' | translate\"\r\n                  [ngModel]=\"preferences().powerUnit\"\r\n                  [options]=\"powerUnitOptions\"\r\n                  (onChange)=\"setPowerUnit($event.value)\"\r\n                >\r\n                </p-dropdown>\r\n                <label for=\"power-unit\">{{\r\n                  'settings.powerUnit' | translate\r\n                }}</label>\r\n              </span>\r\n            </div>\r\n          }\r\n          <div class=\"mt-3 pb-3\">\r\n            <div class=\"text-end\"></div>\r\n            <div class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"language\"\r\n                [tooltip]=\"'settings.languageTooltip' | translate\"\r\n                [ngModel]=\"preferences().language\"\r\n                [options]=\"languageOptions\"\r\n                (onChange)=\"setLanguage($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"language\">{{\r\n                'settings.language' | translate\r\n              }}</label>\r\n              <small class=\"position-absolute end-0 bottom-100 me-1 mb-1\">\r\n                <a\r\n                  href=\"https://github.com/factoriolab/factoriolab/wiki/Translating-FactorioLab\"\r\n                  target=\"_blank\"\r\n                  >{{ 'settings.helpTranslate' | translate }}</a\r\n                >\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-3 pb-3\">\r\n            <div class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"theme\"\r\n                [tooltip]=\"'settings.themeTooltip' | translate\"\r\n                [ngModel]=\"preferences().theme\"\r\n                [options]=\"themeOptions\"\r\n                (onChange)=\"setTheme($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"theme\">{{ 'settings.theme' | translate }}</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <p-checkbox\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.bypassLanding' | translate\"\r\n              [ngModel]=\"preferences().bypassLanding\"\r\n              (onChange)=\"setBypassLanding($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <p-checkbox\r\n              [ngModel]=\"preferences().hideDuplicateIcons\"\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.hideDuplicateIcons' | translate\"\r\n              (onChange)=\"setHideDuplicateIcons($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n          <div>\r\n            <p-checkbox\r\n              [ngModel]=\"preferences().disablePaginator\"\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.disablePaginator' | translate\"\r\n              (onChange)=\"setDisablePaginator($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab [header]=\"'settings.advanced' | translate\">\r\n        <div class=\"p-fluid\">\r\n          <div class=\"mt-3 pb-3\">\r\n            <span class=\"p-float-label\">\r\n              <p-dropdown\r\n                labDropdownTranslate\r\n                inputId=\"maximize-type\"\r\n                [tooltip]=\"'settings.maximizeTypeTooltip' | translate\"\r\n                [ngModel]=\"settings().maximizeType\"\r\n                [options]=\"maximizeTypeOptions\"\r\n                (onChange)=\"setMaximizeType($event.value)\"\r\n              >\r\n              </p-dropdown>\r\n              <label for=\"maximize-type\">{{\r\n                'settings.maximizeType' | translate\r\n              }}</label>\r\n            </span>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <p-checkbox\r\n              [ngModel]=\"settings().netProductionOnly\"\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.netProductionOnly' | translate\"\r\n              [pTooltip]=\"'settings.netProductionOnlyTooltip' | translate\"\r\n              (onChange)=\"setNetProductionOnly($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <p-checkbox\r\n              [ngModel]=\"settings().surplusMachinesOutput\"\r\n              [binary]=\"true\"\r\n              [label]=\"'settings.surplusMachinesOutput' | translate\"\r\n              [pTooltip]=\"'settings.surplusMachinesOutputTooltip' | translate\"\r\n              (onChange)=\"setSurplusMachinesOutput($event.checked)\"\r\n            ></p-checkbox>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-rounded p-button-outlined\"\r\n              icon=\"fa-solid fa-boxes-stacked\"\r\n              [pTooltip]=\"'settings.itemsTooltip' | translate\"\r\n              [label]=\"\r\n                'settings.itemsExcluded'\r\n                  | translate\r\n                    : {\r\n                        count: excludedItemIds().length\r\n                      }\r\n              \"\r\n              (click)=\"\r\n                itemsPicker.clickOpen('item', itemIds(), excludedItemIds())\r\n              \"\r\n            ></button>\r\n            <lab-picker\r\n              #itemsPicker\r\n              [header]=\"'settings.itemsHeader' | translate\"\r\n              (selectIds)=\"setExcludedItems($event, itemsState(), data())\"\r\n            ></lab-picker>\r\n          </div>\r\n          <div class=\"pb-3\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-rounded p-button-outlined\"\r\n              icon=\"fa-solid fa-flask-vial\"\r\n              [pTooltip]=\"'settings.recipesTooltip' | translate\"\r\n              [label]=\"\r\n                'settings.recipesExcluded'\r\n                  | translate\r\n                    : {\r\n                        count: excludedRecipeIds().length\r\n                      }\r\n              \"\r\n              (click)=\"\r\n                recipesPicker.clickOpen(\r\n                  'recipe',\r\n                  recipeIds(),\r\n                  excludedRecipeIds()\r\n                )\r\n              \"\r\n            ></button>\r\n            <lab-picker\r\n              #recipesPicker\r\n              [header]=\"'settings.recipesHeader' | translate\"\r\n              (selectIds)=\"setExcludedRecipes($event, recipesState(), data())\"\r\n            ></lab-picker>\r\n          </div>\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-rounded p-button-outlined mb-4\"\r\n            icon=\"fa-solid fa-dollar-sign\"\r\n            [label]=\"'settings.openCosts' | translate\"\r\n            (click)=\"contentSvc.showCosts$.next()\"\r\n          ></button>\r\n        </div>\r\n      </p-accordionTab>\r\n    </p-accordion>\r\n  </p-scrollPanel>\r\n</div>\r\n", "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppSharedModule } from '~/app-shared.module';\r\nimport { components } from './components';\r\nimport { directives } from './directives';\r\nimport { pipes } from './pipes';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, AppSharedModule],\r\n  declarations: [...components, ...directives, ...pipes],\r\n  exports: [FormsModule, ...components, ...directives, ...pipes],\r\n})\r\nexport class MainSharedModule {}\r\n"],
  "mappings": "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",
  "names": ["num", "_c9", "_c5", "_c6", "_c7", "_c8", "filter", "input", "id", "_c1", "_c2", "_c3", "_c4", "_forTrack0", "_c2", "_c3", "_c5", "_c6", "_c4", "_c0", "_c1"]
}
